%{
  This model was created by Heta compiler.
  Additional functions see in the directory
  export from : #export { format: Simbio, namespace: nameless, ...};
%}

sbioaddtolibrary(sbiounit('week', 'day', 7));

nameless_model = sbiomodel('nameless');

% Compartments
nameless.compartment.GUT = addcompartment(nameless_model, 'GUT', 'ConstantCapacity', false, 'Capacity', 1, 'CapacityUnits', 'litre', 'Notes', '<p>Gut compartment</p>
', 'Tag', '');
nameless.compartment.PLASMA = addcompartment(nameless_model, 'PLASMA', 'ConstantCapacity', false, 'Capacity', 2.649, 'CapacityUnits', 'litre', 'Notes', '<p>Blood plasma compartment</p>
', 'Tag', '');
nameless.compartment.ROB = addcompartment(nameless_model, 'ROB', 'ConstantCapacity', false, 'Capacity', 65.3, 'CapacityUnits', 'litre', 'Notes', '<p>Compartment representing &quot;rest of body&quot;</p>
', 'Tag', '');
nameless.compartment.BRAIN = addcompartment(nameless_model, 'BRAIN', 'ConstantCapacity', false, 'Capacity', 1.45, 'CapacityUnits', 'litre', 'Notes', '<p>Volume of brain</p>
', 'Tag', '');
nameless.compartment.MEC = addcompartment(nameless_model, 'MEC', 'ConstantCapacity', false, 'Capacity', 0.000015, 'CapacityUnits', 'litre', 'Notes', '<p>The same as blood brain barrier (BBB)</p>
', 'Tag', '');

% Species
nameless.species.PFM_gut = addspecies(nameless.compartment.GUT, 'PFM_gut', 'ConstantAmount', false, 'InitialAmount', 0, 'InitialAmountUnits', 'nanogram', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.PFM_p = addspecies(nameless.compartment.PLASMA, 'PFM_p', 'ConstantAmount', false, 'InitialAmount', 0, 'InitialAmountUnits', 'nanogram', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.PFM_r = addspecies(nameless.compartment.ROB, 'PFM_r', 'ConstantAmount', false, 'InitialAmount', 0, 'InitialAmountUnits', 'nanogram', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.A_b = addspecies(nameless.compartment.BRAIN, 'A_b', 'ConstantAmount', false, 'InitialAmount', 0.7493309, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.O_b = addspecies(nameless.compartment.BRAIN, 'O_b', 'ConstantAmount', false, 'InitialAmount', 20.77858, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.P_b = addspecies(nameless.compartment.BRAIN, 'P_b', 'ConstantAmount', false, 'InitialAmount', 6.541209, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.L_b = addspecies(nameless.compartment.BRAIN, 'L_b', 'ConstantAmount', false, 'InitialAmount', 2.319571, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.S_b = addspecies(nameless.compartment.BRAIN, 'S_b', 'ConstantAmount', false, 'InitialAmount', 3.427807, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.NAPE_b = addspecies(nameless.compartment.BRAIN, 'NAPE_b', 'ConstantAmount', false, 'InitialAmount', 0.00003879041, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.NOPE_b = addspecies(nameless.compartment.BRAIN, 'NOPE_b', 'ConstantAmount', false, 'InitialAmount', 0.0008814287, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.NPPE_b = addspecies(nameless.compartment.BRAIN, 'NPPE_b', 'ConstantAmount', false, 'InitialAmount', 0.0001732296, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.NLPE_b = addspecies(nameless.compartment.BRAIN, 'NLPE_b', 'ConstantAmount', false, 'InitialAmount', 0.00007550331, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.NSPE_b = addspecies(nameless.compartment.BRAIN, 'NSPE_b', 'ConstantAmount', false, 'InitialAmount', 0.0001272629, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.FAAH_b = addspecies(nameless.compartment.BRAIN, 'FAAH_b', 'ConstantAmount', false, 'InitialAmount', 15.366, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.FAAHinh_b = addspecies(nameless.compartment.BRAIN, 'FAAHinh_b', 'ConstantAmount', false, 'InitialAmount', 0, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.A_r = addspecies(nameless.compartment.ROB, 'A_r', 'ConstantAmount', false, 'InitialAmount', 0.5419204, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.O_r = addspecies(nameless.compartment.ROB, 'O_r', 'ConstantAmount', false, 'InitialAmount', 14.23822, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.P_r = addspecies(nameless.compartment.ROB, 'P_r', 'ConstantAmount', false, 'InitialAmount', 4.121915, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.L_r = addspecies(nameless.compartment.ROB, 'L_r', 'ConstantAmount', false, 'InitialAmount', 1.705466, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.S_r = addspecies(nameless.compartment.ROB, 'S_r', 'ConstantAmount', false, 'InitialAmount', 2.515968, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.NAPE_r = addspecies(nameless.compartment.ROB, 'NAPE_r', 'ConstantAmount', false, 'InitialAmount', 0.000004241633, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.NOPE_r = addspecies(nameless.compartment.ROB, 'NOPE_r', 'ConstantAmount', false, 'InitialAmount', 0.00009638198, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.NPPE_r = addspecies(nameless.compartment.ROB, 'NPPE_r', 'ConstantAmount', false, 'InitialAmount', 0.00001894222, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.NLPE_r = addspecies(nameless.compartment.ROB, 'NLPE_r', 'ConstantAmount', false, 'InitialAmount', 0.000008256095, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.NSPE_r = addspecies(nameless.compartment.ROB, 'NSPE_r', 'ConstantAmount', false, 'InitialAmount', 0.00001391587, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.FAAH_r = addspecies(nameless.compartment.ROB, 'FAAH_r', 'ConstantAmount', false, 'InitialAmount', 2.165868, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.FAAHinh_r = addspecies(nameless.compartment.ROB, 'FAAHinh_r', 'ConstantAmount', false, 'InitialAmount', 0, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.A_m = addspecies(nameless.compartment.MEC, 'A_m', 'ConstantAmount', false, 'InitialAmount', 0.97761, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.O_m = addspecies(nameless.compartment.MEC, 'O_m', 'ConstantAmount', false, 'InitialAmount', 16.3219, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.P_m = addspecies(nameless.compartment.MEC, 'P_m', 'ConstantAmount', false, 'InitialAmount', 5.809415, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.L_m = addspecies(nameless.compartment.MEC, 'L_m', 'ConstantAmount', false, 'InitialAmount', 0, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.S_m = addspecies(nameless.compartment.MEC, 'S_m', 'ConstantAmount', false, 'InitialAmount', 2.968774, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.FAAH_m = addspecies(nameless.compartment.MEC, 'FAAH_m', 'ConstantAmount', false, 'InitialAmount', 10.686, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.FAAHinh_m = addspecies(nameless.compartment.MEC, 'FAAHinh_m', 'ConstantAmount', false, 'InitialAmount', 0, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.A_p = addspecies(nameless.compartment.PLASMA, 'A_p', 'ConstantAmount', false, 'InitialAmount', 0.8740574, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.O_p = addspecies(nameless.compartment.PLASMA, 'O_p', 'ConstantAmount', false, 'InitialAmount', 5.085073, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.P_p = addspecies(nameless.compartment.PLASMA, 'P_p', 'ConstantAmount', false, 'InitialAmount', 4.849307, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.L_p = addspecies(nameless.compartment.PLASMA, 'L_p', 'ConstantAmount', false, 'InitialAmount', 1.916254, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');
nameless.species.S_p = addspecies(nameless.compartment.PLASMA, 'S_p', 'ConstantAmount', false, 'InitialAmount', 0.273772, 'InitialAmountUnits', 'nanomole/litre', 'BoundaryCondition', false, 'Notes', '', 'Tag', '');

% Parameters
nameless.parameter.F_PFM = addparameter(nameless_model, 'F_PFM', 'ConstantValue', false, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.dose_amount = addparameter(nameless_model, 'dose_amount', 'ConstantValue', false, 'ValueUnits', 'nanogram', 'Notes', '', 'Tag', '');
nameless.parameter.PF_p = addparameter(nameless_model, 'PF_p', 'ConstantValue', false, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.PF_b = addparameter(nameless_model, 'PF_b', 'ConstantValue', false, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.PF_r = addparameter(nameless_model, 'PF_r', 'ConstantValue', false, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.PF_m = addparameter(nameless_model, 'PF_m', 'ConstantValue', false, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.FAAH_D_b = addparameter(nameless_model, 'FAAH_D_b', 'ConstantValue', false, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.slag1_b = addparameter(nameless_model, 'slag1_b', 'ConstantValue', false, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.slag2_b = addparameter(nameless_model, 'slag2_b', 'ConstantValue', false, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.den_b = addparameter(nameless_model, 'den_b', 'ConstantValue', false, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.FAAH_D_r = addparameter(nameless_model, 'FAAH_D_r', 'ConstantValue', false, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.c_NAT_ROB = addparameter(nameless_model, 'c_NAT_ROB', 'ConstantValue', false, 'ValueUnits', 'litre', 'Notes', '', 'Tag', '');
nameless.parameter.slag1_r = addparameter(nameless_model, 'slag1_r', 'ConstantValue', false, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.slag2_r = addparameter(nameless_model, 'slag2_r', 'ConstantValue', false, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.den_r = addparameter(nameless_model, 'den_r', 'ConstantValue', false, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.c_FAAH_ROB = addparameter(nameless_model, 'c_FAAH_ROB', 'ConstantValue', false, 'ValueUnits', 'litre', 'Notes', '', 'Tag', '');
nameless.parameter.c_NAAA_ROB = addparameter(nameless_model, 'c_NAAA_ROB', 'ConstantValue', false, 'ValueUnits', 'litre', 'Notes', '', 'Tag', '');
nameless.parameter.FAAH_D_m = addparameter(nameless_model, 'FAAH_D_m', 'ConstantValue', false, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.Vmax_NAT = addparameter(nameless_model, 'Vmax_NAT', 'ConstantValue', true, 'Value', 300, 'ValueUnits', 'nanomole/litre/hour', 'Notes', '', 'Tag', '');
nameless.parameter.p_A = addparameter(nameless_model, 'p_A', 'ConstantValue', true, 'Value', 0.051, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.p_O = addparameter(nameless_model, 'p_O', 'ConstantValue', true, 'Value', 0.098, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.p_P = addparameter(nameless_model, 'p_P', 'ConstantValue', true, 'Value', 0.615, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.p_L = addparameter(nameless_model, 'p_L', 'ConstantValue', true, 'Value', 0.016, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.p_S = addparameter(nameless_model, 'p_S', 'ConstantValue', true, 'Value', 0.191, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.a_NAT_A = addparameter(nameless_model, 'a_NAT_A', 'ConstantValue', true, 'Value', 1, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.a_NAT_O = addparameter(nameless_model, 'a_NAT_O', 'ConstantValue', true, 'Value', 13, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.a_NAT_P = addparameter(nameless_model, 'a_NAT_P', 'ConstantValue', true, 'Value', 0.42, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.a_NAT_L = addparameter(nameless_model, 'a_NAT_L', 'ConstantValue', true, 'Value', 8.6, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.a_NAT_S = addparameter(nameless_model, 'a_NAT_S', 'ConstantValue', true, 'Value', 1, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_NAT_Brain = addparameter(nameless_model, 'b_NAT_Brain', 'ConstantValue', true, 'Value', 1.667, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_NAT_Pancreas = addparameter(nameless_model, 'b_NAT_Pancreas', 'ConstantValue', true, 'Value', 0.333, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_NAT_Kidney = addparameter(nameless_model, 'b_NAT_Kidney', 'ConstantValue', true, 'Value', 0.667, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_NAT_Heart = addparameter(nameless_model, 'b_NAT_Heart', 'ConstantValue', true, 'Value', 1, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_NAT_Lungs = addparameter(nameless_model, 'b_NAT_Lungs', 'ConstantValue', true, 'Value', 0.033, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_NAT_Muscles = addparameter(nameless_model, 'b_NAT_Muscles', 'ConstantValue', true, 'Value', 0.333, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_NAT_Testis = addparameter(nameless_model, 'b_NAT_Testis', 'ConstantValue', true, 'Value', 0.667, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_NAT_Leucocytes = addparameter(nameless_model, 'b_NAT_Leucocytes', 'ConstantValue', true, 'Value', 0, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.k_NA_PE = addparameter(nameless_model, 'k_NA_PE', 'ConstantValue', true, 'Value', 202, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.k_NO_PE = addparameter(nameless_model, 'k_NO_PE', 'ConstantValue', true, 'Value', 230, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.k_NP_PE = addparameter(nameless_model, 'k_NP_PE', 'ConstantValue', true, 'Value', 270, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.k_NL_PE = addparameter(nameless_model, 'k_NL_PE', 'ConstantValue', true, 'Value', 100, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.k_NS_PE = addparameter(nameless_model, 'k_NS_PE', 'ConstantValue', true, 'Value', 280, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.Km_NA_PE = addparameter(nameless_model, 'Km_NA_PE', 'ConstantValue', true, 'Value', 2800, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.Km_NO_PE = addparameter(nameless_model, 'Km_NO_PE', 'ConstantValue', true, 'Value', 2900, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.Km_NP_PE = addparameter(nameless_model, 'Km_NP_PE', 'ConstantValue', true, 'Value', 3300, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.Km_NL_PE = addparameter(nameless_model, 'Km_NL_PE', 'ConstantValue', true, 'Value', 1000, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.Km_NS_PE = addparameter(nameless_model, 'Km_NS_PE', 'ConstantValue', true, 'Value', 3400, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.Ki_A = addparameter(nameless_model, 'Ki_A', 'ConstantValue', true, 'Value', 230, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.Ki_O = addparameter(nameless_model, 'Ki_O', 'ConstantValue', true, 'Value', 240, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.Ki_P = addparameter(nameless_model, 'Ki_P', 'ConstantValue', true, 'Value', 6700, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.Ki_L = addparameter(nameless_model, 'Ki_L', 'ConstantValue', true, 'Value', 1000, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.Ki_S = addparameter(nameless_model, 'Ki_S', 'ConstantValue', true, 'Value', 840, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.kcat_FAAH = addparameter(nameless_model, 'kcat_FAAH', 'ConstantValue', true, 'Value', 18000, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.FAAH_t = addparameter(nameless_model, 'FAAH_t', 'ConstantValue', true, 'Value', 78, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.a_FAAH_A = addparameter(nameless_model, 'a_FAAH_A', 'ConstantValue', true, 'Value', 1, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.a_FAAH_O = addparameter(nameless_model, 'a_FAAH_O', 'ConstantValue', true, 'Value', 5.7, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.a_FAAH_P = addparameter(nameless_model, 'a_FAAH_P', 'ConstantValue', true, 'Value', 37.8, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.a_FAAH_L = addparameter(nameless_model, 'a_FAAH_L', 'ConstantValue', true, 'Value', 1.15, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.a_FAAH_S = addparameter(nameless_model, 'a_FAAH_S', 'ConstantValue', true, 'Value', 1, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_FAAH_Liver = addparameter(nameless_model, 'b_FAAH_Liver', 'ConstantValue', true, 'Value', 1, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_FAAH_Brain = addparameter(nameless_model, 'b_FAAH_Brain', 'ConstantValue', true, 'Value', 0.197, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_FAAH_Gut = addparameter(nameless_model, 'b_FAAH_Gut', 'ConstantValue', true, 'Value', 0.034, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_FAAH_Spleen = addparameter(nameless_model, 'b_FAAH_Spleen', 'ConstantValue', true, 'Value', 0.03, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_FAAH_Kidney = addparameter(nameless_model, 'b_FAAH_Kidney', 'ConstantValue', true, 'Value', 0.069, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_FAAH_Lungs = addparameter(nameless_model, 'b_FAAH_Lungs', 'ConstantValue', true, 'Value', 0.032, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_FAAH_Testis = addparameter(nameless_model, 'b_FAAH_Testis', 'ConstantValue', true, 'Value', 0.126, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_FAAH_MEC = addparameter(nameless_model, 'b_FAAH_MEC', 'ConstantValue', true, 'Value', 0.137, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_FAAH_Leucocytes = addparameter(nameless_model, 'b_FAAH_Leucocytes', 'ConstantValue', true, 'Value', 0, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.Km_FAAH_A = addparameter(nameless_model, 'Km_FAAH_A', 'ConstantValue', true, 'Value', 8200, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.Km_FAAH_O = addparameter(nameless_model, 'Km_FAAH_O', 'ConstantValue', true, 'Value', 52200, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.Km_FAAH_P = addparameter(nameless_model, 'Km_FAAH_P', 'ConstantValue', true, 'Value', 543000, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.Km_FAAH_L = addparameter(nameless_model, 'Km_FAAH_L', 'ConstantValue', true, 'Value', 10800, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.Km_FAAH_S = addparameter(nameless_model, 'Km_FAAH_S', 'ConstantValue', true, 'Value', 10000, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.k_deg_FAAH = addparameter(nameless_model, 'k_deg_FAAH', 'ConstantValue', true, 'Value', 0.0051, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.k_inh = addparameter(nameless_model, 'k_inh', 'ConstantValue', true, 'Value', 1.1, 'ValueUnits', '1/hour/nanomole*litre', 'Notes', '', 'Tag', '');
nameless.parameter.kcl_A = addparameter(nameless_model, 'kcl_A', 'ConstantValue', true, 'Value', 1.74, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.kcl_O = addparameter(nameless_model, 'kcl_O', 'ConstantValue', true, 'Value', 2.5, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.kcl_P = addparameter(nameless_model, 'kcl_P', 'ConstantValue', true, 'Value', 2.61, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.kcl_L = addparameter(nameless_model, 'kcl_L', 'ConstantValue', true, 'Value', 1.25, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.kcl_S = addparameter(nameless_model, 'kcl_S', 'ConstantValue', true, 'Value', 1.2, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.b_NAAA_Liver = addparameter(nameless_model, 'b_NAAA_Liver', 'ConstantValue', true, 'Value', 1, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_NAAA_Gut = addparameter(nameless_model, 'b_NAAA_Gut', 'ConstantValue', true, 'Value', 0.2, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_NAAA_Spleen = addparameter(nameless_model, 'b_NAAA_Spleen', 'ConstantValue', true, 'Value', 8, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_NAAA_Kidney = addparameter(nameless_model, 'b_NAAA_Kidney', 'ConstantValue', true, 'Value', 0.6, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_NAAA_Heart = addparameter(nameless_model, 'b_NAAA_Heart', 'ConstantValue', true, 'Value', 0.2, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_NAAA_Lungs = addparameter(nameless_model, 'b_NAAA_Lungs', 'ConstantValue', true, 'Value', 14, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_NAAA_Thymus = addparameter(nameless_model, 'b_NAAA_Thymus', 'ConstantValue', true, 'Value', 4, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_NAAA_Testis = addparameter(nameless_model, 'b_NAAA_Testis', 'ConstantValue', true, 'Value', 0.6, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.b_NAAA_Brain = addparameter(nameless_model, 'b_NAAA_Brain', 'ConstantValue', true, 'Value', 0.6, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.M_A = addparameter(nameless_model, 'M_A', 'ConstantValue', true, 'Value', 347.5, 'ValueUnits', 'gram/mole', 'Notes', '', 'Tag', '');
nameless.parameter.M_O = addparameter(nameless_model, 'M_O', 'ConstantValue', true, 'Value', 325.5, 'ValueUnits', 'gram/mole', 'Notes', '', 'Tag', '');
nameless.parameter.M_P = addparameter(nameless_model, 'M_P', 'ConstantValue', true, 'Value', 299.5, 'ValueUnits', 'gram/mole', 'Notes', '', 'Tag', '');
nameless.parameter.M_L = addparameter(nameless_model, 'M_L', 'ConstantValue', true, 'Value', 323.5, 'ValueUnits', 'gram/mole', 'Notes', '', 'Tag', '');
nameless.parameter.M_S = addparameter(nameless_model, 'M_S', 'ConstantValue', true, 'Value', 321.5, 'ValueUnits', 'gram/mole', 'Notes', '', 'Tag', '');
nameless.parameter.Kd_CB1_A = addparameter(nameless_model, 'Kd_CB1_A', 'ConstantValue', true, 'Value', 239.2, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.Kd_AG2 = addparameter(nameless_model, 'Kd_AG2', 'ConstantValue', true, 'Value', 3424, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.AG2_b = addparameter(nameless_model, 'AG2_b', 'ConstantValue', true, 'Value', 0, 'Notes', '', 'Tag', '');
nameless.parameter.Dose = addparameter(nameless_model, 'Dose', 'ConstantValue', true, 'Value', 10, 'ValueUnits', 'milligram', 'Notes', '', 'Tag', '');
nameless.parameter.M_PF = addparameter(nameless_model, 'M_PF', 'ConstantValue', true, 'Value', 455.4, 'ValueUnits', 'gram/mole', 'Notes', '', 'Tag', '');
nameless.parameter.Vss_PFM = addparameter(nameless_model, 'Vss_PFM', 'ConstantValue', true, 'Value', 58.328, 'ValueUnits', 'litre', 'Notes', '', 'Tag', '');
nameless.parameter.Emax_PFM = addparameter(nameless_model, 'Emax_PFM', 'ConstantValue', true, 'Value', 0.773, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.ED50 = addparameter(nameless_model, 'ED50', 'ConstantValue', true, 'Value', 0.53, 'ValueUnits', 'milligram', 'Notes', '', 'Tag', '');
nameless.parameter.kabs_PFM = addparameter(nameless_model, 'kabs_PFM', 'ConstantValue', true, 'Value', 2.2, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.kout_PFM = addparameter(nameless_model, 'kout_PFM', 'ConstantValue', true, 'Value', 0.18, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.kin_PFM = addparameter(nameless_model, 'kin_PFM', 'ConstantValue', true, 'Value', 0.117, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.klinear_PFM = addparameter(nameless_model, 'klinear_PFM', 'ConstantValue', true, 'Value', 0.0803, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.Vm_PFM = addparameter(nameless_model, 'Vm_PFM', 'ConstantValue', true, 'Value', 1511, 'ValueUnits', 'nanogram/hour', 'Notes', '', 'Tag', '');
nameless.parameter.Km_PFM = addparameter(nameless_model, 'Km_PFM', 'ConstantValue', true, 'Value', 26.1, 'ValueUnits', 'nanogram/litre', 'Notes', '', 'Tag', '');
nameless.parameter.R_PF = addparameter(nameless_model, 'R_PF', 'ConstantValue', true, 'Value', 0.6, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.Kp_b_PF = addparameter(nameless_model, 'Kp_b_PF', 'ConstantValue', true, 'Value', 1.3, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.Kp_m_PF = addparameter(nameless_model, 'Kp_m_PF', 'ConstantValue', true, 'Value', 1.3, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.Kp_r_PF = addparameter(nameless_model, 'Kp_r_PF', 'ConstantValue', true, 'Value', 1.5, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.m_per_n = addparameter(nameless_model, 'm_per_n', 'ConstantValue', true, 'Value', 1000000, 'ValueUnits', 'microdimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.PLD_b = addparameter(nameless_model, 'PLD_b', 'ConstantValue', true, 'Value', 10000000, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.PLD_r = addparameter(nameless_model, 'PLD_r', 'ConstantValue', true, 'Value', 10000000, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.LIVER = addparameter(nameless_model, 'LIVER', 'ConstantValue', true, 'Value', 1.69, 'ValueUnits', 'litre', 'Notes', '', 'Tag', '');
nameless.parameter.Gut = addparameter(nameless_model, 'Gut', 'ConstantValue', true, 'Value', 1.65, 'ValueUnits', 'litre', 'Notes', '', 'Tag', '');
nameless.parameter.Spleen = addparameter(nameless_model, 'Spleen', 'ConstantValue', true, 'Value', 0.192, 'ValueUnits', 'litre', 'Notes', '', 'Tag', '');
nameless.parameter.Kidney = addparameter(nameless_model, 'Kidney', 'ConstantValue', true, 'Value', 0.28, 'ValueUnits', 'litre', 'Notes', '', 'Tag', '');
nameless.parameter.Lungs = addparameter(nameless_model, 'Lungs', 'ConstantValue', true, 'Value', 1.172, 'ValueUnits', 'litre', 'Notes', '', 'Tag', '');
nameless.parameter.Testis = addparameter(nameless_model, 'Testis', 'ConstantValue', true, 'Value', 0.036, 'ValueUnits', 'litre', 'Notes', '', 'Tag', '');
nameless.parameter.Leucocytes = addparameter(nameless_model, 'Leucocytes', 'ConstantValue', true, 'Value', 0.025, 'ValueUnits', 'litre', 'Notes', '', 'Tag', '');
nameless.parameter.Pancreas = addparameter(nameless_model, 'Pancreas', 'ConstantValue', true, 'Value', 0.077, 'ValueUnits', 'litre', 'Notes', '', 'Tag', '');
nameless.parameter.Heart = addparameter(nameless_model, 'Heart', 'ConstantValue', true, 'Value', 0.31, 'ValueUnits', 'litre', 'Notes', '', 'Tag', '');
nameless.parameter.Muscles = addparameter(nameless_model, 'Muscles', 'ConstantValue', true, 'Value', 35, 'ValueUnits', 'litre', 'Notes', '', 'Tag', '');
nameless.parameter.Thymus = addparameter(nameless_model, 'Thymus', 'ConstantValue', true, 'Value', 0.029, 'ValueUnits', 'litre', 'Notes', '', 'Tag', '');
nameless.parameter.H = addparameter(nameless_model, 'H', 'ConstantValue', true, 'Value', 0.48, 'Notes', '', 'Tag', '');
nameless.parameter.ktr_m_p_A = addparameter(nameless_model, 'ktr_m_p_A', 'ConstantValue', true, 'Value', 150, 'ValueUnits', 'nanomole/litre/hour', 'Notes', '', 'Tag', '');
nameless.parameter.Ktr_p_m_A = addparameter(nameless_model, 'Ktr_p_m_A', 'ConstantValue', true, 'Value', 1.89, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.Km_p_m_A = addparameter(nameless_model, 'Km_p_m_A', 'ConstantValue', true, 'Value', 1, 'ValueUnits', 'nanomole/litre', 'Notes', '', 'Tag', '');
nameless.parameter.ktr_m_p_O = addparameter(nameless_model, 'ktr_m_p_O', 'ConstantValue', true, 'Value', 10, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.Ktr_p_m_O = addparameter(nameless_model, 'Ktr_p_m_O', 'ConstantValue', true, 'Value', 9.07, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.ktr_m_p_P = addparameter(nameless_model, 'ktr_m_p_P', 'ConstantValue', true, 'Value', 10, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.Ktr_p_m_P = addparameter(nameless_model, 'Ktr_p_m_P', 'ConstantValue', true, 'Value', 2.65, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.ktr_m_p_L = addparameter(nameless_model, 'ktr_m_p_L', 'ConstantValue', true, 'Value', 0, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.Ktr_p_m_L = addparameter(nameless_model, 'Ktr_p_m_L', 'ConstantValue', true, 'Value', 2.77, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.ktr_m_p_S = addparameter(nameless_model, 'ktr_m_p_S', 'ConstantValue', true, 'Value', 10, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.Ktr_p_m_S = addparameter(nameless_model, 'Ktr_p_m_S', 'ConstantValue', true, 'Value', 30.01, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.ktr_r_p_A = addparameter(nameless_model, 'ktr_r_p_A', 'ConstantValue', true, 'Value', 100, 'ValueUnits', 'nanomole/litre/hour', 'Notes', '', 'Tag', '');
nameless.parameter.ktr_r_p = addparameter(nameless_model, 'ktr_r_p', 'ConstantValue', true, 'Value', 100, 'ValueUnits', '1/hour', 'Notes', '', 'Tag', '');
nameless.parameter.Ktr_p_r_A = addparameter(nameless_model, 'Ktr_p_r_A', 'ConstantValue', true, 'Value', 0.62, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.Ktr_p_r_O = addparameter(nameless_model, 'Ktr_p_r_O', 'ConstantValue', true, 'Value', 2.8, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.Ktr_p_r_P = addparameter(nameless_model, 'Ktr_p_r_P', 'ConstantValue', true, 'Value', 0.85, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.Ktr_p_r_L = addparameter(nameless_model, 'Ktr_p_r_L', 'ConstantValue', true, 'Value', 0.89, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');
nameless.parameter.Ktr_p_r_S = addparameter(nameless_model, 'Ktr_p_r_S', 'ConstantValue', true, 'Value', 9.19, 'ValueUnits', 'dimensionless', 'Notes', '', 'Tag', '');

% Reactions
nameless.reaction.absorp = addreaction(nameless_model, 'null -> null', 'Name', 'absorp', 'Active', true, 'Reversible', false, 'ReactionRate', 'kabs_PFM * PFM_gut', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.absorp, [nameless.species.PFM_gut, ], [1, ]);
  addproduct(nameless.reaction.absorp, [nameless.species.PFM_p, ], [1, ]);
nameless.reaction.dist = addreaction(nameless_model, 'null -> null', 'Name', 'dist', 'Active', true, 'Reversible', true, 'ReactionRate', 'kout_PFM * PFM_p - kin_PFM * PFM_r', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.dist, [nameless.species.PFM_p, ], [1, ]);
  addproduct(nameless.reaction.dist, [nameless.species.PFM_r, ], [1, ]);
nameless.reaction.elim = addreaction(nameless_model, 'null -> null', 'Name', 'elim', 'Active', true, 'Reversible', false, 'ReactionRate', 'klinear_PFM * PFM_p + (Vm_PFM * PFM_p / Vss_PFM) / (Km_PFM + PFM_p / Vss_PFM)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.elim, [nameless.species.PFM_p, ], [1, ]);
nameless.reaction.vA_degr_b = addreaction(nameless_model, 'null -> null', 'Name', 'vA_degr_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * FAAH_b * kcat_FAAH * a_FAAH_A * A_b / (Km_FAAH_A * FAAH_D_b)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vA_degr_b, [nameless.species.A_b, nameless.species.FAAH_b, ], [1, 1, ]);
  addproduct(nameless.reaction.vA_degr_b, [nameless.species.FAAH_b, ], [1, ]);
nameless.reaction.vO_degr_b = addreaction(nameless_model, 'null -> null', 'Name', 'vO_degr_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * FAAH_b * kcat_FAAH * a_FAAH_O * O_b / (Km_FAAH_O * FAAH_D_b)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vO_degr_b, [nameless.species.O_b, nameless.species.FAAH_b, ], [1, 1, ]);
  addproduct(nameless.reaction.vO_degr_b, [nameless.species.FAAH_b, ], [1, ]);
nameless.reaction.vP_degr_b = addreaction(nameless_model, 'null -> null', 'Name', 'vP_degr_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * FAAH_b * kcat_FAAH * a_FAAH_P * P_b / (Km_FAAH_P * FAAH_D_b)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vP_degr_b, [nameless.species.P_b, nameless.species.FAAH_b, ], [1, 1, ]);
  addproduct(nameless.reaction.vP_degr_b, [nameless.species.FAAH_b, ], [1, ]);
nameless.reaction.vL_degr_b = addreaction(nameless_model, 'null -> null', 'Name', 'vL_degr_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * FAAH_b * kcat_FAAH * a_FAAH_L * L_b / (Km_FAAH_L * FAAH_D_b)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vL_degr_b, [nameless.species.L_b, nameless.species.FAAH_b, ], [1, 1, ]);
  addproduct(nameless.reaction.vL_degr_b, [nameless.species.FAAH_b, ], [1, ]);
nameless.reaction.vS_degr_b = addreaction(nameless_model, 'null -> null', 'Name', 'vS_degr_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * FAAH_b * kcat_FAAH * a_FAAH_S * S_b / (Km_FAAH_S * FAAH_D_b)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vS_degr_b, [nameless.species.S_b, nameless.species.FAAH_b, ], [1, 1, ]);
  addproduct(nameless.reaction.vS_degr_b, [nameless.species.FAAH_b, ], [1, ]);
nameless.reaction.vNAPE_syn_b = addreaction(nameless_model, 'null -> null', 'Name', 'vNAPE_syn_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * Vmax_NAT * p_A * a_NAT_A * b_NAT_Brain', 'Notes', '', 'Tag', '');
  addproduct(nameless.reaction.vNAPE_syn_b, [nameless.species.NAPE_b, ], [1, ]);
nameless.reaction.vNOPE_syn_b = addreaction(nameless_model, 'null -> null', 'Name', 'vNOPE_syn_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * Vmax_NAT * p_O * a_NAT_O * b_NAT_Brain', 'Notes', '', 'Tag', '');
  addproduct(nameless.reaction.vNOPE_syn_b, [nameless.species.NOPE_b, ], [1, ]);
nameless.reaction.vNPPE_syn_b = addreaction(nameless_model, 'null -> null', 'Name', 'vNPPE_syn_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * Vmax_NAT * p_P * a_NAT_P * b_NAT_Brain', 'Notes', '', 'Tag', '');
  addproduct(nameless.reaction.vNPPE_syn_b, [nameless.species.NPPE_b, ], [1, ]);
nameless.reaction.vNLPE_syn_b = addreaction(nameless_model, 'null -> null', 'Name', 'vNLPE_syn_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * Vmax_NAT * p_L * a_NAT_L * b_NAT_Brain', 'Notes', '', 'Tag', '');
  addproduct(nameless.reaction.vNLPE_syn_b, [nameless.species.NLPE_b, ], [1, ]);
nameless.reaction.vNSPE_syn_b = addreaction(nameless_model, 'null -> null', 'Name', 'vNSPE_syn_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * Vmax_NAT * p_S * a_NAT_S * b_NAT_Brain', 'Notes', '', 'Tag', '');
  addproduct(nameless.reaction.vNSPE_syn_b, [nameless.species.NSPE_b, ], [1, ]);
nameless.reaction.vA_syn_b = addreaction(nameless_model, 'null -> null', 'Name', 'vA_syn_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * PLD_b * k_NA_PE * NAPE_b / Km_NA_PE / den_b', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vA_syn_b, [nameless.species.NAPE_b, ], [1, ]);
  addproduct(nameless.reaction.vA_syn_b, [nameless.species.A_b, ], [1, ]);
nameless.reaction.vO_syn_b = addreaction(nameless_model, 'null -> null', 'Name', 'vO_syn_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * PLD_b * k_NO_PE * NOPE_b / Km_NO_PE / den_b', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vO_syn_b, [nameless.species.NOPE_b, ], [1, ]);
  addproduct(nameless.reaction.vO_syn_b, [nameless.species.O_b, ], [1, ]);
nameless.reaction.vP_syn_b = addreaction(nameless_model, 'null -> null', 'Name', 'vP_syn_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * PLD_b * k_NP_PE * NPPE_b / Km_NP_PE / den_b', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vP_syn_b, [nameless.species.NPPE_b, ], [1, ]);
  addproduct(nameless.reaction.vP_syn_b, [nameless.species.P_b, ], [1, ]);
nameless.reaction.vL_syn_b = addreaction(nameless_model, 'null -> null', 'Name', 'vL_syn_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * PLD_b * k_NL_PE * NLPE_b / Km_NL_PE / den_b', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vL_syn_b, [nameless.species.NLPE_b, ], [1, ]);
  addproduct(nameless.reaction.vL_syn_b, [nameless.species.L_b, ], [1, ]);
nameless.reaction.vS_syn_b = addreaction(nameless_model, 'null -> null', 'Name', 'vS_syn_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * PLD_b * k_NS_PE * NSPE_b / Km_NS_PE / den_b', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vS_syn_b, [nameless.species.NSPE_b, ], [1, ]);
  addproduct(nameless.reaction.vS_syn_b, [nameless.species.S_b, ], [1, ]);
nameless.reaction.vFAAH_syn_b = addreaction(nameless_model, 'null -> null', 'Name', 'vFAAH_syn_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * FAAH_t * b_FAAH_Brain * k_deg_FAAH', 'Notes', '', 'Tag', '');
  addproduct(nameless.reaction.vFAAH_syn_b, [nameless.species.FAAH_b, ], [1, ]);
nameless.reaction.vFAAH_degr_b = addreaction(nameless_model, 'null -> null', 'Name', 'vFAAH_degr_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * k_deg_FAAH * FAAH_b', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vFAAH_degr_b, [nameless.species.FAAH_b, ], [1, ]);
nameless.reaction.vFAAH_inh_b = addreaction(nameless_model, 'null -> null', 'Name', 'vFAAH_inh_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * k_inh * FAAH_b * PF_b', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vFAAH_inh_b, [nameless.species.FAAH_b, ], [1, ]);
  addproduct(nameless.reaction.vFAAH_inh_b, [nameless.species.FAAHinh_b, ], [1, ]);
nameless.reaction.vFAAH_inh_degr_b = addreaction(nameless_model, 'null -> null', 'Name', 'vFAAH_inh_degr_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * k_deg_FAAH * FAAHinh_b', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vFAAH_inh_degr_b, [nameless.species.FAAHinh_b, ], [1, ]);
nameless.reaction.vA_UE_b = addreaction(nameless_model, 'null -> null', 'Name', 'vA_UE_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * b_FAAH_Brain * kcl_A * A_b', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vA_UE_b, [nameless.species.A_b, ], [1, ]);
nameless.reaction.vO_UE_b = addreaction(nameless_model, 'null -> null', 'Name', 'vO_UE_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * b_FAAH_Brain * kcl_O * O_b', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vO_UE_b, [nameless.species.O_b, ], [1, ]);
nameless.reaction.vP_UE_b = addreaction(nameless_model, 'null -> null', 'Name', 'vP_UE_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * b_FAAH_Brain * kcl_P * P_b', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vP_UE_b, [nameless.species.P_b, ], [1, ]);
nameless.reaction.vL_UE_b = addreaction(nameless_model, 'null -> null', 'Name', 'vL_UE_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * b_FAAH_Brain * kcl_L * L_b', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vL_UE_b, [nameless.species.L_b, ], [1, ]);
nameless.reaction.vS_UE_b = addreaction(nameless_model, 'null -> null', 'Name', 'vS_UE_b', 'Active', true, 'Reversible', false, 'ReactionRate', 'BRAIN * b_FAAH_Brain * kcl_S * S_b', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vS_UE_b, [nameless.species.S_b, ], [1, ]);
nameless.reaction.vA_degr_r = addreaction(nameless_model, 'null -> null', 'Name', 'vA_degr_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'ROB * FAAH_r * kcat_FAAH * a_FAAH_A * A_r / (Km_FAAH_A * FAAH_D_r)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vA_degr_r, [nameless.species.A_r, nameless.species.FAAH_r, ], [1, 1, ]);
  addproduct(nameless.reaction.vA_degr_r, [nameless.species.FAAH_r, ], [1, ]);
nameless.reaction.vO_degr_r = addreaction(nameless_model, 'null -> null', 'Name', 'vO_degr_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'ROB * FAAH_r * kcat_FAAH * a_FAAH_O * O_r / (Km_FAAH_O * FAAH_D_r)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vO_degr_r, [nameless.species.O_r, nameless.species.FAAH_r, ], [1, 1, ]);
  addproduct(nameless.reaction.vO_degr_r, [nameless.species.FAAH_r, ], [1, ]);
nameless.reaction.vP_degr_r = addreaction(nameless_model, 'null -> null', 'Name', 'vP_degr_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'ROB * FAAH_r * kcat_FAAH * a_FAAH_P * P_r / (Km_FAAH_P * FAAH_D_r)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vP_degr_r, [nameless.species.P_r, nameless.species.FAAH_r, ], [1, 1, ]);
  addproduct(nameless.reaction.vP_degr_r, [nameless.species.FAAH_r, ], [1, ]);
nameless.reaction.vL_degr_r = addreaction(nameless_model, 'null -> null', 'Name', 'vL_degr_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'ROB * FAAH_r * kcat_FAAH * a_FAAH_L * L_r / (Km_FAAH_L * FAAH_D_r)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vL_degr_r, [nameless.species.L_r, nameless.species.FAAH_r, ], [1, 1, ]);
  addproduct(nameless.reaction.vL_degr_r, [nameless.species.FAAH_r, ], [1, ]);
nameless.reaction.vS_degr_r = addreaction(nameless_model, 'null -> null', 'Name', 'vS_degr_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'ROB * FAAH_r * kcat_FAAH * a_FAAH_S * S_r / (Km_FAAH_S * FAAH_D_r)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vS_degr_r, [nameless.species.S_r, nameless.species.FAAH_r, ], [1, 1, ]);
  addproduct(nameless.reaction.vS_degr_r, [nameless.species.FAAH_r, ], [1, ]);
nameless.reaction.vNAPE_syn_r = addreaction(nameless_model, 'null -> null', 'Name', 'vNAPE_syn_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'Vmax_NAT * p_A * a_NAT_A * c_NAT_ROB', 'Notes', '', 'Tag', '');
  addproduct(nameless.reaction.vNAPE_syn_r, [nameless.species.NAPE_r, ], [1, ]);
nameless.reaction.vNOPE_syn_r = addreaction(nameless_model, 'null -> null', 'Name', 'vNOPE_syn_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'Vmax_NAT * p_O * a_NAT_O * c_NAT_ROB', 'Notes', '', 'Tag', '');
  addproduct(nameless.reaction.vNOPE_syn_r, [nameless.species.NOPE_r, ], [1, ]);
nameless.reaction.vNPPE_syn_r = addreaction(nameless_model, 'null -> null', 'Name', 'vNPPE_syn_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'Vmax_NAT * p_P * a_NAT_P * c_NAT_ROB', 'Notes', '', 'Tag', '');
  addproduct(nameless.reaction.vNPPE_syn_r, [nameless.species.NPPE_r, ], [1, ]);
nameless.reaction.vNLPE_syn_r = addreaction(nameless_model, 'null -> null', 'Name', 'vNLPE_syn_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'Vmax_NAT * p_L * a_NAT_L * c_NAT_ROB', 'Notes', '', 'Tag', '');
  addproduct(nameless.reaction.vNLPE_syn_r, [nameless.species.NLPE_r, ], [1, ]);
nameless.reaction.vNSPE_syn_r = addreaction(nameless_model, 'null -> null', 'Name', 'vNSPE_syn_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'Vmax_NAT * p_S * a_NAT_S * c_NAT_ROB', 'Notes', '', 'Tag', '');
  addproduct(nameless.reaction.vNSPE_syn_r, [nameless.species.NSPE_r, ], [1, ]);
nameless.reaction.vA_syn_r = addreaction(nameless_model, 'null -> null', 'Name', 'vA_syn_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'ROB * PLD_r * k_NA_PE * NAPE_r / Km_NA_PE / den_r', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vA_syn_r, [nameless.species.NAPE_r, ], [1, ]);
  addproduct(nameless.reaction.vA_syn_r, [nameless.species.A_r, ], [1, ]);
nameless.reaction.vO_syn_r = addreaction(nameless_model, 'null -> null', 'Name', 'vO_syn_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'ROB * PLD_r * k_NO_PE * NOPE_r / Km_NO_PE / den_r', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vO_syn_r, [nameless.species.NOPE_r, ], [1, ]);
  addproduct(nameless.reaction.vO_syn_r, [nameless.species.O_r, ], [1, ]);
nameless.reaction.vP_syn_r = addreaction(nameless_model, 'null -> null', 'Name', 'vP_syn_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'ROB * PLD_r * k_NP_PE * NPPE_r / Km_NP_PE / den_r', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vP_syn_r, [nameless.species.NPPE_r, ], [1, ]);
  addproduct(nameless.reaction.vP_syn_r, [nameless.species.P_r, ], [1, ]);
nameless.reaction.vL_syn_r = addreaction(nameless_model, 'null -> null', 'Name', 'vL_syn_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'ROB * PLD_r * k_NL_PE * NLPE_r / Km_NL_PE / den_r', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vL_syn_r, [nameless.species.NLPE_r, ], [1, ]);
  addproduct(nameless.reaction.vL_syn_r, [nameless.species.L_r, ], [1, ]);
nameless.reaction.vS_syn_r = addreaction(nameless_model, 'null -> null', 'Name', 'vS_syn_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'ROB * PLD_r * k_NS_PE * NSPE_r / Km_NS_PE / den_r', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vS_syn_r, [nameless.species.NSPE_r, ], [1, ]);
  addproduct(nameless.reaction.vS_syn_r, [nameless.species.S_r, ], [1, ]);
nameless.reaction.vFAAH_syn_r = addreaction(nameless_model, 'null -> null', 'Name', 'vFAAH_syn_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'FAAH_t * c_FAAH_ROB * k_deg_FAAH', 'Notes', '', 'Tag', '');
  addproduct(nameless.reaction.vFAAH_syn_r, [nameless.species.FAAH_r, ], [1, ]);
nameless.reaction.vFAAH_degr_r = addreaction(nameless_model, 'null -> null', 'Name', 'vFAAH_degr_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'ROB * k_deg_FAAH * FAAH_r', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vFAAH_degr_r, [nameless.species.FAAH_r, ], [1, ]);
nameless.reaction.vFAAH_inh_r = addreaction(nameless_model, 'null -> null', 'Name', 'vFAAH_inh_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'ROB * k_inh * FAAH_r * PF_r', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vFAAH_inh_r, [nameless.species.FAAH_r, ], [1, ]);
  addproduct(nameless.reaction.vFAAH_inh_r, [nameless.species.FAAHinh_r, ], [1, ]);
nameless.reaction.vFAAH_inh_degr_r = addreaction(nameless_model, 'null -> null', 'Name', 'vFAAH_inh_degr_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'ROB * k_deg_FAAH * FAAHinh_r', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vFAAH_inh_degr_r, [nameless.species.FAAHinh_r, ], [1, ]);
nameless.reaction.vA_UE_r = addreaction(nameless_model, 'null -> null', 'Name', 'vA_UE_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'c_NAAA_ROB * kcl_A * A_r', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vA_UE_r, [nameless.species.A_r, ], [1, ]);
nameless.reaction.vO_UE_r = addreaction(nameless_model, 'null -> null', 'Name', 'vO_UE_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'c_NAAA_ROB * kcl_O * O_r', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vO_UE_r, [nameless.species.O_r, ], [1, ]);
nameless.reaction.vP_UE_r = addreaction(nameless_model, 'null -> null', 'Name', 'vP_UE_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'c_NAAA_ROB * kcl_P * P_r', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vP_UE_r, [nameless.species.P_r, ], [1, ]);
nameless.reaction.vL_UE_r = addreaction(nameless_model, 'null -> null', 'Name', 'vL_UE_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'c_NAAA_ROB * kcl_L * L_r', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vL_UE_r, [nameless.species.L_r, ], [1, ]);
nameless.reaction.vS_UE_r = addreaction(nameless_model, 'null -> null', 'Name', 'vS_UE_r', 'Active', true, 'Reversible', false, 'ReactionRate', 'c_NAAA_ROB * kcl_S * S_r', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vS_UE_r, [nameless.species.S_r, ], [1, ]);
nameless.reaction.vA_degr_m = addreaction(nameless_model, 'null -> null', 'Name', 'vA_degr_m', 'Active', true, 'Reversible', false, 'ReactionRate', 'MEC * FAAH_m * kcat_FAAH * a_FAAH_A * A_m / (Km_FAAH_A * FAAH_D_m)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vA_degr_m, [nameless.species.A_m, nameless.species.FAAH_m, ], [1, 1, ]);
  addproduct(nameless.reaction.vA_degr_m, [nameless.species.FAAH_m, ], [1, ]);
nameless.reaction.vO_degr_m = addreaction(nameless_model, 'null -> null', 'Name', 'vO_degr_m', 'Active', true, 'Reversible', false, 'ReactionRate', 'MEC * FAAH_m * kcat_FAAH * a_FAAH_O * O_m / (Km_FAAH_O * FAAH_D_m)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vO_degr_m, [nameless.species.O_m, nameless.species.FAAH_m, ], [1, 1, ]);
  addproduct(nameless.reaction.vO_degr_m, [nameless.species.FAAH_m, ], [1, ]);
nameless.reaction.vP_degr_m = addreaction(nameless_model, 'null -> null', 'Name', 'vP_degr_m', 'Active', true, 'Reversible', false, 'ReactionRate', 'MEC * FAAH_m * kcat_FAAH * a_FAAH_P * P_m / (Km_FAAH_P * FAAH_D_m)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vP_degr_m, [nameless.species.P_m, nameless.species.FAAH_m, ], [1, 1, ]);
  addproduct(nameless.reaction.vP_degr_m, [nameless.species.FAAH_m, ], [1, ]);
nameless.reaction.vL_degr_m = addreaction(nameless_model, 'null -> null', 'Name', 'vL_degr_m', 'Active', true, 'Reversible', false, 'ReactionRate', 'MEC * FAAH_m * kcat_FAAH * a_FAAH_L * L_m / (Km_FAAH_L * FAAH_D_m)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vL_degr_m, [nameless.species.L_m, nameless.species.FAAH_m, ], [1, 1, ]);
  addproduct(nameless.reaction.vL_degr_m, [nameless.species.FAAH_m, ], [1, ]);
nameless.reaction.vS_degr_m = addreaction(nameless_model, 'null -> null', 'Name', 'vS_degr_m', 'Active', true, 'Reversible', false, 'ReactionRate', 'MEC * FAAH_m * kcat_FAAH * a_FAAH_S * S_m / (Km_FAAH_S * FAAH_D_m)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vS_degr_m, [nameless.species.S_m, nameless.species.FAAH_m, ], [1, 1, ]);
  addproduct(nameless.reaction.vS_degr_m, [nameless.species.FAAH_m, ], [1, ]);
nameless.reaction.vFAAH_syn_m = addreaction(nameless_model, 'null -> null', 'Name', 'vFAAH_syn_m', 'Active', true, 'Reversible', false, 'ReactionRate', 'MEC * FAAH_t * b_FAAH_MEC * k_deg_FAAH', 'Notes', '', 'Tag', '');
  addproduct(nameless.reaction.vFAAH_syn_m, [nameless.species.FAAH_m, ], [1, ]);
nameless.reaction.vFAAH_degr_m = addreaction(nameless_model, 'null -> null', 'Name', 'vFAAH_degr_m', 'Active', true, 'Reversible', false, 'ReactionRate', 'MEC * k_deg_FAAH * FAAH_m', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vFAAH_degr_m, [nameless.species.FAAH_m, ], [1, ]);
nameless.reaction.vFAAH_inh_m = addreaction(nameless_model, 'null -> null', 'Name', 'vFAAH_inh_m', 'Active', true, 'Reversible', false, 'ReactionRate', 'MEC * k_inh * FAAH_m * PF_m', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vFAAH_inh_m, [nameless.species.FAAH_m, ], [1, ]);
  addproduct(nameless.reaction.vFAAH_inh_m, [nameless.species.FAAHinh_m, ], [1, ]);
nameless.reaction.vFAAH_inh_degr_m = addreaction(nameless_model, 'null -> null', 'Name', 'vFAAH_inh_degr_m', 'Active', true, 'Reversible', false, 'ReactionRate', 'MEC * k_deg_FAAH * FAAHinh_m', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vFAAH_inh_degr_m, [nameless.species.FAAHinh_m, ], [1, ]);
nameless.reaction.vA_m_p = addreaction(nameless_model, 'null -> null', 'Name', 'vA_m_p', 'Active', true, 'Reversible', true, 'ReactionRate', 'MEC * ktr_m_p_A * (A_m - A_p * Ktr_p_m_A) / (A_m + A_p + Km_p_m_A)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vA_m_p, [nameless.species.A_m, ], [1, ]);
  addproduct(nameless.reaction.vA_m_p, [nameless.species.A_p, ], [1, ]);
nameless.reaction.vO_m_p = addreaction(nameless_model, 'null -> null', 'Name', 'vO_m_p', 'Active', true, 'Reversible', true, 'ReactionRate', 'MEC * ktr_m_p_O * (O_m - O_p * Ktr_p_m_O)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vO_m_p, [nameless.species.O_m, ], [1, ]);
  addproduct(nameless.reaction.vO_m_p, [nameless.species.O_p, ], [1, ]);
nameless.reaction.vP_m_p = addreaction(nameless_model, 'null -> null', 'Name', 'vP_m_p', 'Active', true, 'Reversible', true, 'ReactionRate', 'MEC * ktr_m_p_P * (P_m - P_p * Ktr_p_m_P)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vP_m_p, [nameless.species.P_m, ], [1, ]);
  addproduct(nameless.reaction.vP_m_p, [nameless.species.P_p, ], [1, ]);
nameless.reaction.vL_m_p = addreaction(nameless_model, 'null -> null', 'Name', 'vL_m_p', 'Active', true, 'Reversible', true, 'ReactionRate', 'MEC * ktr_m_p_L * (L_m - L_p * Ktr_p_m_L)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vL_m_p, [nameless.species.L_m, ], [1, ]);
  addproduct(nameless.reaction.vL_m_p, [nameless.species.L_p, ], [1, ]);
nameless.reaction.vS_m_p = addreaction(nameless_model, 'null -> null', 'Name', 'vS_m_p', 'Active', true, 'Reversible', true, 'ReactionRate', 'MEC * ktr_m_p_S * (S_m - S_p * Ktr_p_m_S)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vS_m_p, [nameless.species.S_m, ], [1, ]);
  addproduct(nameless.reaction.vS_m_p, [nameless.species.S_p, ], [1, ]);
nameless.reaction.vA_b_m = addreaction(nameless_model, 'null -> null', 'Name', 'vA_b_m', 'Active', true, 'Reversible', true, 'ReactionRate', 'MEC * ktr_m_p_A * (A_b - A_m) / (A_m + A_b + Km_p_m_A)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vA_b_m, [nameless.species.A_b, ], [1, ]);
  addproduct(nameless.reaction.vA_b_m, [nameless.species.A_m, ], [1, ]);
nameless.reaction.vO_b_m = addreaction(nameless_model, 'null -> null', 'Name', 'vO_b_m', 'Active', true, 'Reversible', true, 'ReactionRate', 'MEC * ktr_m_p_O * (O_b - O_m)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vO_b_m, [nameless.species.O_b, ], [1, ]);
  addproduct(nameless.reaction.vO_b_m, [nameless.species.O_m, ], [1, ]);
nameless.reaction.vP_b_m = addreaction(nameless_model, 'null -> null', 'Name', 'vP_b_m', 'Active', true, 'Reversible', true, 'ReactionRate', 'MEC * ktr_m_p_P * (P_b - P_m)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vP_b_m, [nameless.species.P_b, ], [1, ]);
  addproduct(nameless.reaction.vP_b_m, [nameless.species.P_m, ], [1, ]);
nameless.reaction.vL_b_m = addreaction(nameless_model, 'null -> null', 'Name', 'vL_b_m', 'Active', true, 'Reversible', true, 'ReactionRate', 'MEC * ktr_m_p_L * (L_b - L_m)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vL_b_m, [nameless.species.L_b, ], [1, ]);
  addproduct(nameless.reaction.vL_b_m, [nameless.species.L_m, ], [1, ]);
nameless.reaction.vS_b_m = addreaction(nameless_model, 'null -> null', 'Name', 'vS_b_m', 'Active', true, 'Reversible', true, 'ReactionRate', 'MEC * ktr_m_p_S * (S_b - S_m)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vS_b_m, [nameless.species.S_b, ], [1, ]);
  addproduct(nameless.reaction.vS_b_m, [nameless.species.S_m, ], [1, ]);
nameless.reaction.vA_r_p = addreaction(nameless_model, 'null -> null', 'Name', 'vA_r_p', 'Active', true, 'Reversible', true, 'ReactionRate', 'PLASMA * ktr_r_p_A * (A_r - A_p * Ktr_p_r_A) / (A_r + A_p + Km_p_m_A)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vA_r_p, [nameless.species.A_r, ], [1, ]);
  addproduct(nameless.reaction.vA_r_p, [nameless.species.A_p, ], [1, ]);
nameless.reaction.vO_r_p = addreaction(nameless_model, 'null -> null', 'Name', 'vO_r_p', 'Active', true, 'Reversible', true, 'ReactionRate', 'PLASMA * ktr_r_p * (O_r - O_p * Ktr_p_r_O)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vO_r_p, [nameless.species.O_r, ], [1, ]);
  addproduct(nameless.reaction.vO_r_p, [nameless.species.O_p, ], [1, ]);
nameless.reaction.vP_r_p = addreaction(nameless_model, 'null -> null', 'Name', 'vP_r_p', 'Active', true, 'Reversible', true, 'ReactionRate', 'PLASMA * ktr_r_p * (P_r - P_p * Ktr_p_r_P)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vP_r_p, [nameless.species.P_r, ], [1, ]);
  addproduct(nameless.reaction.vP_r_p, [nameless.species.P_p, ], [1, ]);
nameless.reaction.vL_r_p = addreaction(nameless_model, 'null -> null', 'Name', 'vL_r_p', 'Active', true, 'Reversible', true, 'ReactionRate', 'PLASMA * ktr_r_p * (L_r - L_p * Ktr_p_r_L)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vL_r_p, [nameless.species.L_r, ], [1, ]);
  addproduct(nameless.reaction.vL_r_p, [nameless.species.L_p, ], [1, ]);
nameless.reaction.vS_r_p = addreaction(nameless_model, 'null -> null', 'Name', 'vS_r_p', 'Active', true, 'Reversible', true, 'ReactionRate', 'PLASMA * ktr_r_p * (S_r - S_p * Ktr_p_r_S)', 'Notes', '', 'Tag', '');
  addreactant(nameless.reaction.vS_r_p, [nameless.species.S_r, ], [1, ]);
  addproduct(nameless.reaction.vS_r_p, [nameless.species.S_p, ], [1, ]);

% Rules
addrule(nameless_model, 'F_PFM = Emax_PFM * Dose / (ED50 + Dose)', 'repeatedAssignment');
addrule(nameless_model, 'dose_amount = F_PFM * m_per_n * Dose * F_PFM', 'repeatedAssignment');
addrule(nameless_model, 'PF_p = PFM_p / M_PF / Vss_PFM', 'repeatedAssignment');
addrule(nameless_model, 'PF_b = PF_p * Kp_b_PF', 'repeatedAssignment');
addrule(nameless_model, 'PF_r = PF_p * Kp_r_PF', 'repeatedAssignment');
addrule(nameless_model, 'PF_m = PF_p * Kp_m_PF', 'repeatedAssignment');
addrule(nameless_model, 'FAAH_D_b = 1 + A_b / Km_FAAH_A + O_b / Km_FAAH_O + P_b / Km_FAAH_P + L_b / Km_FAAH_L + S_b / Km_FAAH_S', 'repeatedAssignment');
addrule(nameless_model, 'slag1_b = NAPE_b / Km_NA_PE + NOPE_b / Km_NO_PE + NPPE_b / Km_NP_PE + NLPE_b / Km_NL_PE + NSPE_b / Km_NS_PE', 'repeatedAssignment');
addrule(nameless_model, 'slag2_b = A_b / Ki_A + O_b / Ki_O + P_b / Ki_P + L_b / Ki_L + S_b / Ki_S', 'repeatedAssignment');
addrule(nameless_model, 'den_b = 1 + slag1_b + slag2_b', 'repeatedAssignment');
addrule(nameless_model, 'FAAH_D_r = 1 + A_r / Km_FAAH_A + O_r / Km_FAAH_O + P_r / Km_FAAH_P + L_r / Km_FAAH_L + S_r / Km_FAAH_S', 'repeatedAssignment');
addrule(nameless_model, 'c_NAT_ROB = Pancreas * b_NAT_Pancreas + Kidney * b_NAT_Kidney + Heart * b_NAT_Heart + Lungs * b_NAT_Lungs + Muscles * b_NAT_Muscles + Testis * b_NAT_Testis + Leucocytes * b_NAT_Leucocytes', 'repeatedAssignment');
addrule(nameless_model, 'slag1_r = NAPE_r / Km_NA_PE + NOPE_r / Km_NO_PE + NPPE_r / Km_NP_PE + NLPE_r / Km_NL_PE + NSPE_r / Km_NS_PE', 'repeatedAssignment');
addrule(nameless_model, 'slag2_r = A_r / Ki_A + O_r / Ki_O + P_r / Ki_P + L_r / Ki_L + S_r / Ki_S', 'repeatedAssignment');
addrule(nameless_model, 'den_r = 1 + slag1_r + slag2_r', 'repeatedAssignment');
addrule(nameless_model, 'c_FAAH_ROB = LIVER * b_FAAH_Liver + Gut * b_FAAH_Gut + Spleen * b_FAAH_Spleen + Kidney * b_FAAH_Kidney + Lungs * b_FAAH_Lungs + Testis * b_FAAH_Testis + Leucocytes * b_FAAH_Leucocytes', 'repeatedAssignment');
addrule(nameless_model, 'c_NAAA_ROB = LIVER * b_NAAA_Liver + Gut * b_NAAA_Gut + Spleen * b_NAAA_Spleen + Kidney * b_NAAA_Kidney + Heart * b_NAAA_Heart + Lungs * b_NAAA_Lungs + Thymus * b_NAAA_Thymus + Testis * b_NAAA_Testis', 'repeatedAssignment');
addrule(nameless_model, 'FAAH_D_m = 1 + A_m / Km_FAAH_A + O_m / Km_FAAH_O + P_m / Km_FAAH_P + L_m / Km_FAAH_L + S_m / Km_FAAH_S', 'repeatedAssignment');

% Time Events
nameless.event.evt1 = addevent(nameless_model, 'time >= 0 && (time - 0) /  - floor((time - 0) /  + 0.5) >= 0', {'PFM_gut = PFM_gut + dose_amount', }, 'Active', true, 'Notes', '', 'Tag', '');






% Update simulation config
nameless.config = getconfigset(nameless_model)
set(nameless.config.SolverOptions, 'AbsoluteToleranceScaling', false)
