#= 
    This code was generated by heta-compiler 0.6.1
    
=#

function Platform()

### create default constants
nameless_constants_ = NamedTuple{(
  :Vmax_NAT,:p_A,:p_O,:p_P,:p_L,:p_S,:a_NAT_A,:a_NAT_O,:a_NAT_P,:a_NAT_L,:a_NAT_S,:b_NAT_Brain,:b_NAT_Pancreas,:b_NAT_Kidney,:b_NAT_Heart,:b_NAT_Lungs,:b_NAT_Muscles,:b_NAT_Testis,:b_NAT_Leucocytes,:k_NA_PE,:k_NO_PE,:k_NP_PE,:k_NL_PE,:k_NS_PE,:Km_NA_PE,:Km_NO_PE,:Km_NP_PE,:Km_NL_PE,:Km_NS_PE,:Ki_A,:Ki_O,:Ki_P,:Ki_L,:Ki_S,:kcat_FAAH,:FAAH_t,:a_FAAH_A,:a_FAAH_O,:a_FAAH_P,:a_FAAH_L,:a_FAAH_S,:b_FAAH_Liver,:b_FAAH_Brain,:b_FAAH_Gut,:b_FAAH_Spleen,:b_FAAH_Kidney,:b_FAAH_Lungs,:b_FAAH_Testis,:b_FAAH_MEC,:b_FAAH_Leucocytes,:Km_FAAH_A,:Km_FAAH_O,:Km_FAAH_P,:Km_FAAH_L,:Km_FAAH_S,:k_deg_FAAH,:k_inh,:kcl_A,:kcl_O,:kcl_P,:kcl_L,:kcl_S,:b_NAAA_Liver,:b_NAAA_Gut,:b_NAAA_Spleen,:b_NAAA_Kidney,:b_NAAA_Heart,:b_NAAA_Lungs,:b_NAAA_Thymus,:b_NAAA_Testis,:b_NAAA_Brain,:M_A,:M_O,:M_P,:M_L,:M_S,:Kd_CB1_A,:Kd_AG2,:AG2_b,:Dose,:M_PF,:Vss_PFM,:Emax_PFM,:ED50,:kabs_PFM,:kout_PFM,:kin_PFM,:klinear_PFM,:Vm_PFM,:Km_PFM,:R_PF,:Kp_b_PF,:Kp_m_PF,:Kp_r_PF,:m_per_n,:PLD_b,:PLD_r,:LIVER,:Gut,:Spleen,:Kidney,:Lungs,:Testis,:Leucocytes,:Pancreas,:Heart,:Muscles,:Thymus,:H,:ktr_m_p_A,:Ktr_p_m_A,:Km_p_m_A,:ktr_m_p_O,:Ktr_p_m_O,:ktr_m_p_P,:Ktr_p_m_P,:ktr_m_p_L,:Ktr_p_m_L,:ktr_m_p_S,:Ktr_p_m_S,:ktr_r_p_A,:ktr_r_p,:Ktr_p_r_A,:Ktr_p_r_O,:Ktr_p_r_P,:Ktr_p_r_L,:Ktr_p_r_S,
)}(Float64[
  300,0.051,0.098,0.615,0.016,0.191,1,13,0.42,8.6,1,1.667,0.333,0.667,1,0.033,0.333,0.667,0,202,230,270,100,280,2800,2900,3300,1000,3400,230,240,6700,1000,840,18000,78,1,5.7,37.8,1.15,1,1,0.197,0.034,0.03,0.069,0.032,0.126,0.137,0,8200,52200,543000,10800,10000,0.0051,1.1,1.74,2.5,2.61,1.25,1.2,1,0.2,8,0.6,0.2,14,4,0.6,0.6,347.5,325.5,299.5,323.5,321.5,239.2,3424,0,10,455.4,58.328,0.773,0.53,2.2,0.18,0.117,0.0803,1511,26.1,0.6,1.3,1.3,1.5,1000000,10000000,10000000,1.69,1.65,0.192,0.28,1.172,0.036,0.025,0.077,0.31,35,0.029,0.48,150,1.89,1,10,9.07,10,2.65,0,2.77,10,30.01,100,100,0.62,2.8,0.85,0.89,9.19,
])

### create default output
nameless_output_ = Symbol[
  :PFM_p,:A_p,:O_p,:P_p,
]

### initialization of ODE variables and Records
function nameless_start_(cons)
    #(Vmax_NAT,p_A,p_O,p_P,p_L,p_S,a_NAT_A,a_NAT_O,a_NAT_P,a_NAT_L,a_NAT_S,b_NAT_Brain,b_NAT_Pancreas,b_NAT_Kidney,b_NAT_Heart,b_NAT_Lungs,b_NAT_Muscles,b_NAT_Testis,b_NAT_Leucocytes,k_NA_PE,k_NO_PE,k_NP_PE,k_NL_PE,k_NS_PE,Km_NA_PE,Km_NO_PE,Km_NP_PE,Km_NL_PE,Km_NS_PE,Ki_A,Ki_O,Ki_P,Ki_L,Ki_S,kcat_FAAH,FAAH_t,a_FAAH_A,a_FAAH_O,a_FAAH_P,a_FAAH_L,a_FAAH_S,b_FAAH_Liver,b_FAAH_Brain,b_FAAH_Gut,b_FAAH_Spleen,b_FAAH_Kidney,b_FAAH_Lungs,b_FAAH_Testis,b_FAAH_MEC,b_FAAH_Leucocytes,Km_FAAH_A,Km_FAAH_O,Km_FAAH_P,Km_FAAH_L,Km_FAAH_S,k_deg_FAAH,k_inh,kcl_A,kcl_O,kcl_P,kcl_L,kcl_S,b_NAAA_Liver,b_NAAA_Gut,b_NAAA_Spleen,b_NAAA_Kidney,b_NAAA_Heart,b_NAAA_Lungs,b_NAAA_Thymus,b_NAAA_Testis,b_NAAA_Brain,M_A,M_O,M_P,M_L,M_S,Kd_CB1_A,Kd_AG2,AG2_b,Dose,M_PF,Vss_PFM,Emax_PFM,ED50,kabs_PFM,kout_PFM,kin_PFM,klinear_PFM,Vm_PFM,Km_PFM,R_PF,Kp_b_PF,Kp_m_PF,Kp_r_PF,m_per_n,PLD_b,PLD_r,LIVER,Gut,Spleen,Kidney,Lungs,Testis,Leucocytes,Pancreas,Heart,Muscles,Thymus,H,ktr_m_p_A,Ktr_p_m_A,Km_p_m_A,ktr_m_p_O,Ktr_p_m_O,ktr_m_p_P,Ktr_p_m_P,ktr_m_p_L,Ktr_p_m_L,ktr_m_p_S,Ktr_p_m_S,ktr_r_p_A,ktr_r_p,Ktr_p_r_A,Ktr_p_r_O,Ktr_p_r_P,Ktr_p_r_L,Ktr_p_r_S,) = cons

    # Heta initialize
    t = 0.0 # initial time
    GUT = 1.0
    F_PFM = cons[83] * cons[80] / (cons[84] + cons[80])
    dose_amount = F_PFM * cons[95] * cons[80] * F_PFM
    PFM_gut = 0.0
    absorp = cons[85] * PFM_gut
    PFM_p = 0.0
    PFM_r = 0.0
    dist = cons[86] * PFM_p - cons[87] * PFM_r
    elim = cons[88] * PFM_p + (cons[89] * PFM_p / cons[82]) / (cons[90] + PFM_p / cons[82])
    BRAIN = 1.45
    FAAH_b = 15.366
    A_b = 0.7493309
    O_b = 20.77858
    P_b = 6.541209
    L_b = 2.319571
    S_b = 3.427807
    FAAH_D_b = 1.0 + A_b / cons[51] + O_b / cons[52] + P_b / cons[53] + L_b / cons[54] + S_b / cons[55]
    vA_degr_b = BRAIN * FAAH_b * cons[35] * cons[37] * A_b / (cons[51] * FAAH_D_b)
    vO_degr_b = BRAIN * FAAH_b * cons[35] * cons[38] * O_b / (cons[52] * FAAH_D_b)
    vP_degr_b = BRAIN * FAAH_b * cons[35] * cons[39] * P_b / (cons[53] * FAAH_D_b)
    vL_degr_b = BRAIN * FAAH_b * cons[35] * cons[40] * L_b / (cons[54] * FAAH_D_b)
    vS_degr_b = BRAIN * FAAH_b * cons[35] * cons[41] * S_b / (cons[55] * FAAH_D_b)
    vNAPE_syn_b = BRAIN * cons[1] * cons[2] * cons[7] * cons[12]
    vNOPE_syn_b = BRAIN * cons[1] * cons[3] * cons[8] * cons[12]
    vNPPE_syn_b = BRAIN * cons[1] * cons[4] * cons[9] * cons[12]
    vNLPE_syn_b = BRAIN * cons[1] * cons[5] * cons[10] * cons[12]
    vNSPE_syn_b = BRAIN * cons[1] * cons[6] * cons[11] * cons[12]
    NAPE_b = 3.879041e-5
    NOPE_b = 8.814287e-4
    NPPE_b = 1.732296e-4
    NLPE_b = 7.550331e-5
    NSPE_b = 1.272629e-4
    slag1_b = NAPE_b / cons[25] + NOPE_b / cons[26] + NPPE_b / cons[27] + NLPE_b / cons[28] + NSPE_b / cons[29]
    slag2_b = A_b / cons[30] + O_b / cons[31] + P_b / cons[32] + L_b / cons[33] + S_b / cons[34]
    den_b = 1.0 + slag1_b + slag2_b
    vA_syn_b = BRAIN * cons[96] * cons[20] * NAPE_b / cons[25] / den_b
    vO_syn_b = BRAIN * cons[96] * cons[21] * NOPE_b / cons[26] / den_b
    vP_syn_b = BRAIN * cons[96] * cons[22] * NPPE_b / cons[27] / den_b
    vL_syn_b = BRAIN * cons[96] * cons[23] * NLPE_b / cons[28] / den_b
    vS_syn_b = BRAIN * cons[96] * cons[24] * NSPE_b / cons[29] / den_b
    vFAAH_syn_b = BRAIN * cons[36] * cons[43] * cons[56]
    vFAAH_degr_b = BRAIN * cons[56] * FAAH_b
    PF_p = PFM_p / cons[81] / cons[82]
    PF_b = PF_p * cons[92]
    vFAAH_inh_b = BRAIN * cons[57] * FAAH_b * PF_b
    FAAHinh_b = 0.0
    vFAAH_inh_degr_b = BRAIN * cons[56] * FAAHinh_b
    vA_UE_b = BRAIN * cons[43] * cons[58] * A_b
    vO_UE_b = BRAIN * cons[43] * cons[59] * O_b
    vP_UE_b = BRAIN * cons[43] * cons[60] * P_b
    vL_UE_b = BRAIN * cons[43] * cons[61] * L_b
    vS_UE_b = BRAIN * cons[43] * cons[62] * S_b
    ROB = 65.3
    FAAH_r = 2.165868
    A_r = 0.5419204
    O_r = 14.23822
    P_r = 4.121915
    L_r = 1.705466
    S_r = 2.515968
    FAAH_D_r = 1.0 + A_r / cons[51] + O_r / cons[52] + P_r / cons[53] + L_r / cons[54] + S_r / cons[55]
    vA_degr_r = ROB * FAAH_r * cons[35] * cons[37] * A_r / (cons[51] * FAAH_D_r)
    vO_degr_r = ROB * FAAH_r * cons[35] * cons[38] * O_r / (cons[52] * FAAH_D_r)
    vP_degr_r = ROB * FAAH_r * cons[35] * cons[39] * P_r / (cons[53] * FAAH_D_r)
    vL_degr_r = ROB * FAAH_r * cons[35] * cons[40] * L_r / (cons[54] * FAAH_D_r)
    vS_degr_r = ROB * FAAH_r * cons[35] * cons[41] * S_r / (cons[55] * FAAH_D_r)
    c_NAT_ROB = cons[105] * cons[13] + cons[101] * cons[14] + cons[106] * cons[15] + cons[102] * cons[16] + cons[107] * cons[17] + cons[103] * cons[18] + cons[104] * cons[19]
    vNAPE_syn_r = cons[1] * cons[2] * cons[7] * c_NAT_ROB
    vNOPE_syn_r = cons[1] * cons[3] * cons[8] * c_NAT_ROB
    vNPPE_syn_r = cons[1] * cons[4] * cons[9] * c_NAT_ROB
    vNLPE_syn_r = cons[1] * cons[5] * cons[10] * c_NAT_ROB
    vNSPE_syn_r = cons[1] * cons[6] * cons[11] * c_NAT_ROB
    NAPE_r = 4.241633e-6
    NOPE_r = 9.638198e-5
    NPPE_r = 1.894222e-5
    NLPE_r = 8.256095e-6
    NSPE_r = 1.391587e-5
    slag1_r = NAPE_r / cons[25] + NOPE_r / cons[26] + NPPE_r / cons[27] + NLPE_r / cons[28] + NSPE_r / cons[29]
    slag2_r = A_r / cons[30] + O_r / cons[31] + P_r / cons[32] + L_r / cons[33] + S_r / cons[34]
    den_r = 1.0 + slag1_r + slag2_r
    vA_syn_r = ROB * cons[97] * cons[20] * NAPE_r / cons[25] / den_r
    vO_syn_r = ROB * cons[97] * cons[21] * NOPE_r / cons[26] / den_r
    vP_syn_r = ROB * cons[97] * cons[22] * NPPE_r / cons[27] / den_r
    vL_syn_r = ROB * cons[97] * cons[23] * NLPE_r / cons[28] / den_r
    vS_syn_r = ROB * cons[97] * cons[24] * NSPE_r / cons[29] / den_r
    c_FAAH_ROB = cons[98] * cons[42] + cons[99] * cons[44] + cons[100] * cons[45] + cons[101] * cons[46] + cons[102] * cons[47] + cons[103] * cons[48] + cons[104] * cons[50]
    vFAAH_syn_r = cons[36] * c_FAAH_ROB * cons[56]
    vFAAH_degr_r = ROB * cons[56] * FAAH_r
    PF_r = PF_p * cons[94]
    vFAAH_inh_r = ROB * cons[57] * FAAH_r * PF_r
    FAAHinh_r = 0.0
    vFAAH_inh_degr_r = ROB * cons[56] * FAAHinh_r
    c_NAAA_ROB = cons[98] * cons[63] + cons[99] * cons[64] + cons[100] * cons[65] + cons[101] * cons[66] + cons[106] * cons[67] + cons[102] * cons[68] + cons[108] * cons[69] + cons[103] * cons[70]
    vA_UE_r = c_NAAA_ROB * cons[58] * A_r
    vO_UE_r = c_NAAA_ROB * cons[59] * O_r
    vP_UE_r = c_NAAA_ROB * cons[60] * P_r
    vL_UE_r = c_NAAA_ROB * cons[61] * L_r
    vS_UE_r = c_NAAA_ROB * cons[62] * S_r
    MEC = 1.5e-5
    FAAH_m = 10.686
    A_m = 0.97761
    O_m = 16.3219
    P_m = 5.809415
    L_m = 0.0
    S_m = 2.968774
    FAAH_D_m = 1.0 + A_m / cons[51] + O_m / cons[52] + P_m / cons[53] + L_m / cons[54] + S_m / cons[55]
    vA_degr_m = MEC * FAAH_m * cons[35] * cons[37] * A_m / (cons[51] * FAAH_D_m)
    vO_degr_m = MEC * FAAH_m * cons[35] * cons[38] * O_m / (cons[52] * FAAH_D_m)
    vP_degr_m = MEC * FAAH_m * cons[35] * cons[39] * P_m / (cons[53] * FAAH_D_m)
    vL_degr_m = MEC * FAAH_m * cons[35] * cons[40] * L_m / (cons[54] * FAAH_D_m)
    vS_degr_m = MEC * FAAH_m * cons[35] * cons[41] * S_m / (cons[55] * FAAH_D_m)
    vFAAH_syn_m = MEC * cons[36] * cons[49] * cons[56]
    vFAAH_degr_m = MEC * cons[56] * FAAH_m
    PF_m = PF_p * cons[93]
    vFAAH_inh_m = MEC * cons[57] * FAAH_m * PF_m
    FAAHinh_m = 0.0
    vFAAH_inh_degr_m = MEC * cons[56] * FAAHinh_m
    A_p = 0.8740574
    vA_m_p = MEC * cons[110] * (A_m - A_p * cons[111]) / (A_m + A_p + cons[112])
    O_p = 5.085073
    vO_m_p = MEC * cons[113] * (O_m - O_p * cons[114])
    P_p = 4.849307
    vP_m_p = MEC * cons[115] * (P_m - P_p * cons[116])
    L_p = 1.916254
    vL_m_p = MEC * cons[117] * (L_m - L_p * cons[118])
    S_p = 0.273772
    vS_m_p = MEC * cons[119] * (S_m - S_p * cons[120])
    vA_b_m = MEC * cons[110] * (A_b - A_m) / (A_m + A_b + cons[112])
    vO_b_m = MEC * cons[113] * (O_b - O_m)
    vP_b_m = MEC * cons[115] * (P_b - P_m)
    vL_b_m = MEC * cons[117] * (L_b - L_m)
    vS_b_m = MEC * cons[119] * (S_b - S_m)
    PLASMA = 2.649
    vA_r_p = PLASMA * cons[121] * (A_r - A_p * cons[123]) / (A_r + A_p + cons[112])
    vO_r_p = PLASMA * cons[122] * (O_r - O_p * cons[124])
    vP_r_p = PLASMA * cons[122] * (P_r - P_p * cons[125])
    vL_r_p = PLASMA * cons[122] * (L_r - L_p * cons[126])
    vS_r_p = PLASMA * cons[122] * (S_r - S_p * cons[127])
    
    # save results

    return (
        Float64[
            PFM_gut,
            PFM_p,
            PFM_r,
            A_b * BRAIN,
            O_b * BRAIN,
            P_b * BRAIN,
            L_b * BRAIN,
            S_b * BRAIN,
            NAPE_b * BRAIN,
            NOPE_b * BRAIN,
            NPPE_b * BRAIN,
            NLPE_b * BRAIN,
            NSPE_b * BRAIN,
            FAAH_b * BRAIN,
            FAAHinh_b * BRAIN,
            A_r * ROB,
            O_r * ROB,
            P_r * ROB,
            L_r * ROB,
            S_r * ROB,
            NAPE_r * ROB,
            NOPE_r * ROB,
            NPPE_r * ROB,
            NLPE_r * ROB,
            NSPE_r * ROB,
            FAAH_r * ROB,
            FAAHinh_r * ROB,
            A_m * MEC,
            O_m * MEC,
            P_m * MEC,
            L_m * MEC,
            S_m * MEC,
            FAAH_m * MEC,
            FAAHinh_m * MEC,
            A_p * PLASMA,
            O_p * PLASMA,
            P_p * PLASMA,
            L_p * PLASMA,
            S_p * PLASMA,
        ],
        Float64[
            GUT,
            PLASMA,
            ROB,
            BRAIN,
            MEC,
        ]
    )
end

### calculate RHS of ODE
function nameless_ode_(du, u, p, t)
    cons = p.constants
    (GUT,PLASMA,ROB,BRAIN,MEC,) = p.static
    (PFM_gut,PFM_p,PFM_r,A_b_,O_b_,P_b_,L_b_,S_b_,NAPE_b_,NOPE_b_,NPPE_b_,NLPE_b_,NSPE_b_,FAAH_b_,FAAHinh_b_,A_r_,O_r_,P_r_,L_r_,S_r_,NAPE_r_,NOPE_r_,NPPE_r_,NLPE_r_,NSPE_r_,FAAH_r_,FAAHinh_r_,A_m_,O_m_,P_m_,L_m_,S_m_,FAAH_m_,FAAHinh_m_,A_p_,O_p_,P_p_,L_p_,S_p_,) = u 

    # Heta rules
    F_PFM = cons[83] * cons[80] / (cons[84] + cons[80])
    dose_amount = F_PFM * cons[95] * cons[80] * F_PFM
    absorp = cons[85] * PFM_gut
    dist = cons[86] * PFM_p - cons[87] * PFM_r
    elim = cons[88] * PFM_p + (cons[89] * PFM_p / cons[82]) / (cons[90] + PFM_p / cons[82])
    FAAH_b = FAAH_b_ / BRAIN
    A_b = A_b_ / BRAIN
    O_b = O_b_ / BRAIN
    P_b = P_b_ / BRAIN
    L_b = L_b_ / BRAIN
    S_b = S_b_ / BRAIN
    FAAH_D_b = 1.0 + A_b / cons[51] + O_b / cons[52] + P_b / cons[53] + L_b / cons[54] + S_b / cons[55]
    vA_degr_b = BRAIN * FAAH_b * cons[35] * cons[37] * A_b / (cons[51] * FAAH_D_b)
    vO_degr_b = BRAIN * FAAH_b * cons[35] * cons[38] * O_b / (cons[52] * FAAH_D_b)
    vP_degr_b = BRAIN * FAAH_b * cons[35] * cons[39] * P_b / (cons[53] * FAAH_D_b)
    vL_degr_b = BRAIN * FAAH_b * cons[35] * cons[40] * L_b / (cons[54] * FAAH_D_b)
    vS_degr_b = BRAIN * FAAH_b * cons[35] * cons[41] * S_b / (cons[55] * FAAH_D_b)
    vNAPE_syn_b = BRAIN * cons[1] * cons[2] * cons[7] * cons[12]
    vNOPE_syn_b = BRAIN * cons[1] * cons[3] * cons[8] * cons[12]
    vNPPE_syn_b = BRAIN * cons[1] * cons[4] * cons[9] * cons[12]
    vNLPE_syn_b = BRAIN * cons[1] * cons[5] * cons[10] * cons[12]
    vNSPE_syn_b = BRAIN * cons[1] * cons[6] * cons[11] * cons[12]
    NAPE_b = NAPE_b_ / BRAIN
    NOPE_b = NOPE_b_ / BRAIN
    NPPE_b = NPPE_b_ / BRAIN
    NLPE_b = NLPE_b_ / BRAIN
    NSPE_b = NSPE_b_ / BRAIN
    slag1_b = NAPE_b / cons[25] + NOPE_b / cons[26] + NPPE_b / cons[27] + NLPE_b / cons[28] + NSPE_b / cons[29]
    slag2_b = A_b / cons[30] + O_b / cons[31] + P_b / cons[32] + L_b / cons[33] + S_b / cons[34]
    den_b = 1.0 + slag1_b + slag2_b
    vA_syn_b = BRAIN * cons[96] * cons[20] * NAPE_b / cons[25] / den_b
    vO_syn_b = BRAIN * cons[96] * cons[21] * NOPE_b / cons[26] / den_b
    vP_syn_b = BRAIN * cons[96] * cons[22] * NPPE_b / cons[27] / den_b
    vL_syn_b = BRAIN * cons[96] * cons[23] * NLPE_b / cons[28] / den_b
    vS_syn_b = BRAIN * cons[96] * cons[24] * NSPE_b / cons[29] / den_b
    vFAAH_syn_b = BRAIN * cons[36] * cons[43] * cons[56]
    vFAAH_degr_b = BRAIN * cons[56] * FAAH_b
    PF_p = PFM_p / cons[81] / cons[82]
    PF_b = PF_p * cons[92]
    vFAAH_inh_b = BRAIN * cons[57] * FAAH_b * PF_b
    FAAHinh_b = FAAHinh_b_ / BRAIN
    vFAAH_inh_degr_b = BRAIN * cons[56] * FAAHinh_b
    vA_UE_b = BRAIN * cons[43] * cons[58] * A_b
    vO_UE_b = BRAIN * cons[43] * cons[59] * O_b
    vP_UE_b = BRAIN * cons[43] * cons[60] * P_b
    vL_UE_b = BRAIN * cons[43] * cons[61] * L_b
    vS_UE_b = BRAIN * cons[43] * cons[62] * S_b
    FAAH_r = FAAH_r_ / ROB
    A_r = A_r_ / ROB
    O_r = O_r_ / ROB
    P_r = P_r_ / ROB
    L_r = L_r_ / ROB
    S_r = S_r_ / ROB
    FAAH_D_r = 1.0 + A_r / cons[51] + O_r / cons[52] + P_r / cons[53] + L_r / cons[54] + S_r / cons[55]
    vA_degr_r = ROB * FAAH_r * cons[35] * cons[37] * A_r / (cons[51] * FAAH_D_r)
    vO_degr_r = ROB * FAAH_r * cons[35] * cons[38] * O_r / (cons[52] * FAAH_D_r)
    vP_degr_r = ROB * FAAH_r * cons[35] * cons[39] * P_r / (cons[53] * FAAH_D_r)
    vL_degr_r = ROB * FAAH_r * cons[35] * cons[40] * L_r / (cons[54] * FAAH_D_r)
    vS_degr_r = ROB * FAAH_r * cons[35] * cons[41] * S_r / (cons[55] * FAAH_D_r)
    c_NAT_ROB = cons[105] * cons[13] + cons[101] * cons[14] + cons[106] * cons[15] + cons[102] * cons[16] + cons[107] * cons[17] + cons[103] * cons[18] + cons[104] * cons[19]
    vNAPE_syn_r = cons[1] * cons[2] * cons[7] * c_NAT_ROB
    vNOPE_syn_r = cons[1] * cons[3] * cons[8] * c_NAT_ROB
    vNPPE_syn_r = cons[1] * cons[4] * cons[9] * c_NAT_ROB
    vNLPE_syn_r = cons[1] * cons[5] * cons[10] * c_NAT_ROB
    vNSPE_syn_r = cons[1] * cons[6] * cons[11] * c_NAT_ROB
    NAPE_r = NAPE_r_ / ROB
    NOPE_r = NOPE_r_ / ROB
    NPPE_r = NPPE_r_ / ROB
    NLPE_r = NLPE_r_ / ROB
    NSPE_r = NSPE_r_ / ROB
    slag1_r = NAPE_r / cons[25] + NOPE_r / cons[26] + NPPE_r / cons[27] + NLPE_r / cons[28] + NSPE_r / cons[29]
    slag2_r = A_r / cons[30] + O_r / cons[31] + P_r / cons[32] + L_r / cons[33] + S_r / cons[34]
    den_r = 1.0 + slag1_r + slag2_r
    vA_syn_r = ROB * cons[97] * cons[20] * NAPE_r / cons[25] / den_r
    vO_syn_r = ROB * cons[97] * cons[21] * NOPE_r / cons[26] / den_r
    vP_syn_r = ROB * cons[97] * cons[22] * NPPE_r / cons[27] / den_r
    vL_syn_r = ROB * cons[97] * cons[23] * NLPE_r / cons[28] / den_r
    vS_syn_r = ROB * cons[97] * cons[24] * NSPE_r / cons[29] / den_r
    c_FAAH_ROB = cons[98] * cons[42] + cons[99] * cons[44] + cons[100] * cons[45] + cons[101] * cons[46] + cons[102] * cons[47] + cons[103] * cons[48] + cons[104] * cons[50]
    vFAAH_syn_r = cons[36] * c_FAAH_ROB * cons[56]
    vFAAH_degr_r = ROB * cons[56] * FAAH_r
    PF_r = PF_p * cons[94]
    vFAAH_inh_r = ROB * cons[57] * FAAH_r * PF_r
    FAAHinh_r = FAAHinh_r_ / ROB
    vFAAH_inh_degr_r = ROB * cons[56] * FAAHinh_r
    c_NAAA_ROB = cons[98] * cons[63] + cons[99] * cons[64] + cons[100] * cons[65] + cons[101] * cons[66] + cons[106] * cons[67] + cons[102] * cons[68] + cons[108] * cons[69] + cons[103] * cons[70]
    vA_UE_r = c_NAAA_ROB * cons[58] * A_r
    vO_UE_r = c_NAAA_ROB * cons[59] * O_r
    vP_UE_r = c_NAAA_ROB * cons[60] * P_r
    vL_UE_r = c_NAAA_ROB * cons[61] * L_r
    vS_UE_r = c_NAAA_ROB * cons[62] * S_r
    FAAH_m = FAAH_m_ / MEC
    A_m = A_m_ / MEC
    O_m = O_m_ / MEC
    P_m = P_m_ / MEC
    L_m = L_m_ / MEC
    S_m = S_m_ / MEC
    FAAH_D_m = 1.0 + A_m / cons[51] + O_m / cons[52] + P_m / cons[53] + L_m / cons[54] + S_m / cons[55]
    vA_degr_m = MEC * FAAH_m * cons[35] * cons[37] * A_m / (cons[51] * FAAH_D_m)
    vO_degr_m = MEC * FAAH_m * cons[35] * cons[38] * O_m / (cons[52] * FAAH_D_m)
    vP_degr_m = MEC * FAAH_m * cons[35] * cons[39] * P_m / (cons[53] * FAAH_D_m)
    vL_degr_m = MEC * FAAH_m * cons[35] * cons[40] * L_m / (cons[54] * FAAH_D_m)
    vS_degr_m = MEC * FAAH_m * cons[35] * cons[41] * S_m / (cons[55] * FAAH_D_m)
    vFAAH_syn_m = MEC * cons[36] * cons[49] * cons[56]
    vFAAH_degr_m = MEC * cons[56] * FAAH_m
    PF_m = PF_p * cons[93]
    vFAAH_inh_m = MEC * cons[57] * FAAH_m * PF_m
    FAAHinh_m = FAAHinh_m_ / MEC
    vFAAH_inh_degr_m = MEC * cons[56] * FAAHinh_m
    A_p = A_p_ / PLASMA
    vA_m_p = MEC * cons[110] * (A_m - A_p * cons[111]) / (A_m + A_p + cons[112])
    O_p = O_p_ / PLASMA
    vO_m_p = MEC * cons[113] * (O_m - O_p * cons[114])
    P_p = P_p_ / PLASMA
    vP_m_p = MEC * cons[115] * (P_m - P_p * cons[116])
    L_p = L_p_ / PLASMA
    vL_m_p = MEC * cons[117] * (L_m - L_p * cons[118])
    S_p = S_p_ / PLASMA
    vS_m_p = MEC * cons[119] * (S_m - S_p * cons[120])
    vA_b_m = MEC * cons[110] * (A_b - A_m) / (A_m + A_b + cons[112])
    vO_b_m = MEC * cons[113] * (O_b - O_m)
    vP_b_m = MEC * cons[115] * (P_b - P_m)
    vL_b_m = MEC * cons[117] * (L_b - L_m)
    vS_b_m = MEC * cons[119] * (S_b - S_m)
    vA_r_p = PLASMA * cons[121] * (A_r - A_p * cons[123]) / (A_r + A_p + cons[112])
    vO_r_p = PLASMA * cons[122] * (O_r - O_p * cons[124])
    vP_r_p = PLASMA * cons[122] * (P_r - P_p * cons[125])
    vL_r_p = PLASMA * cons[122] * (L_r - L_p * cons[126])
    vS_r_p = PLASMA * cons[122] * (S_r - S_p * cons[127])
    
    #p.static .= [GUT,PLASMA,ROB,BRAIN,MEC,]
    du .= [
      -absorp,  # dPFM_gut_/dt
      absorp-dist-elim,  # dPFM_p_/dt
      dist,  # dPFM_r_/dt
      -vA_degr_b+vA_syn_b-vA_UE_b-vA_b_m,  # dA_b_/dt
      -vO_degr_b+vO_syn_b-vO_UE_b-vO_b_m,  # dO_b_/dt
      -vP_degr_b+vP_syn_b-vP_UE_b-vP_b_m,  # dP_b_/dt
      -vL_degr_b+vL_syn_b-vL_UE_b-vL_b_m,  # dL_b_/dt
      -vS_degr_b+vS_syn_b-vS_UE_b-vS_b_m,  # dS_b_/dt
      vNAPE_syn_b-vA_syn_b,  # dNAPE_b_/dt
      vNOPE_syn_b-vO_syn_b,  # dNOPE_b_/dt
      vNPPE_syn_b-vP_syn_b,  # dNPPE_b_/dt
      vNLPE_syn_b-vL_syn_b,  # dNLPE_b_/dt
      vNSPE_syn_b-vS_syn_b,  # dNSPE_b_/dt
      vFAAH_syn_b-vFAAH_degr_b-vFAAH_inh_b,  # dFAAH_b_/dt
      vFAAH_inh_b-vFAAH_inh_degr_b,  # dFAAHinh_b_/dt
      -vA_degr_r+vA_syn_r-vA_UE_r-vA_r_p,  # dA_r_/dt
      -vO_degr_r+vO_syn_r-vO_UE_r-vO_r_p,  # dO_r_/dt
      -vP_degr_r+vP_syn_r-vP_UE_r-vP_r_p,  # dP_r_/dt
      -vL_degr_r+vL_syn_r-vL_UE_r-vL_r_p,  # dL_r_/dt
      -vS_degr_r+vS_syn_r-vS_UE_r-vS_r_p,  # dS_r_/dt
      vNAPE_syn_r-vA_syn_r,  # dNAPE_r_/dt
      vNOPE_syn_r-vO_syn_r,  # dNOPE_r_/dt
      vNPPE_syn_r-vP_syn_r,  # dNPPE_r_/dt
      vNLPE_syn_r-vL_syn_r,  # dNLPE_r_/dt
      vNSPE_syn_r-vS_syn_r,  # dNSPE_r_/dt
      vFAAH_syn_r-vFAAH_degr_r-vFAAH_inh_r,  # dFAAH_r_/dt
      vFAAH_inh_r-vFAAH_inh_degr_r,  # dFAAHinh_r_/dt
      -vA_degr_m-vA_m_p+vA_b_m,  # dA_m_/dt
      -vO_degr_m-vO_m_p+vO_b_m,  # dO_m_/dt
      -vP_degr_m-vP_m_p+vP_b_m,  # dP_m_/dt
      -vL_degr_m-vL_m_p+vL_b_m,  # dL_m_/dt
      -vS_degr_m-vS_m_p+vS_b_m,  # dS_m_/dt
      vFAAH_syn_m-vFAAH_degr_m-vFAAH_inh_m,  # dFAAH_m_/dt
      vFAAH_inh_m-vFAAH_inh_degr_m,  # dFAAHinh_m_/dt
      vA_m_p+vA_r_p,  # dA_p_/dt
      vO_m_p+vO_r_p,  # dO_p_/dt
      vP_m_p+vP_r_p,  # dP_p_/dt
      vL_m_p+vL_r_p,  # dL_p_/dt
      vS_m_p+vS_r_p,  # dS_p_/dt
    ]
end

### output function
function nameless_make_saving_(outputIds::Vector{Symbol})
    function saving_(u, t, integrator)
        cons = integrator.p.constants
        (GUT,PLASMA,ROB,BRAIN,MEC,) = integrator.p.static
        (PFM_gut,PFM_p,PFM_r,A_b_,O_b_,P_b_,L_b_,S_b_,NAPE_b_,NOPE_b_,NPPE_b_,NLPE_b_,NSPE_b_,FAAH_b_,FAAHinh_b_,A_r_,O_r_,P_r_,L_r_,S_r_,NAPE_r_,NOPE_r_,NPPE_r_,NLPE_r_,NSPE_r_,FAAH_r_,FAAHinh_r_,A_m_,O_m_,P_m_,L_m_,S_m_,FAAH_m_,FAAHinh_m_,A_p_,O_p_,P_p_,L_p_,S_p_,) = u

        # Heta rules
        F_PFM = cons[83] * cons[80] / (cons[84] + cons[80])
        dose_amount = F_PFM * cons[95] * cons[80] * F_PFM
        absorp = cons[85] * PFM_gut
        dist = cons[86] * PFM_p - cons[87] * PFM_r
        elim = cons[88] * PFM_p + (cons[89] * PFM_p / cons[82]) / (cons[90] + PFM_p / cons[82])
        FAAH_b = FAAH_b_ / BRAIN
        A_b = A_b_ / BRAIN
        O_b = O_b_ / BRAIN
        P_b = P_b_ / BRAIN
        L_b = L_b_ / BRAIN
        S_b = S_b_ / BRAIN
        FAAH_D_b = 1.0 + A_b / cons[51] + O_b / cons[52] + P_b / cons[53] + L_b / cons[54] + S_b / cons[55]
        vA_degr_b = BRAIN * FAAH_b * cons[35] * cons[37] * A_b / (cons[51] * FAAH_D_b)
        vO_degr_b = BRAIN * FAAH_b * cons[35] * cons[38] * O_b / (cons[52] * FAAH_D_b)
        vP_degr_b = BRAIN * FAAH_b * cons[35] * cons[39] * P_b / (cons[53] * FAAH_D_b)
        vL_degr_b = BRAIN * FAAH_b * cons[35] * cons[40] * L_b / (cons[54] * FAAH_D_b)
        vS_degr_b = BRAIN * FAAH_b * cons[35] * cons[41] * S_b / (cons[55] * FAAH_D_b)
        vNAPE_syn_b = BRAIN * cons[1] * cons[2] * cons[7] * cons[12]
        vNOPE_syn_b = BRAIN * cons[1] * cons[3] * cons[8] * cons[12]
        vNPPE_syn_b = BRAIN * cons[1] * cons[4] * cons[9] * cons[12]
        vNLPE_syn_b = BRAIN * cons[1] * cons[5] * cons[10] * cons[12]
        vNSPE_syn_b = BRAIN * cons[1] * cons[6] * cons[11] * cons[12]
        NAPE_b = NAPE_b_ / BRAIN
        NOPE_b = NOPE_b_ / BRAIN
        NPPE_b = NPPE_b_ / BRAIN
        NLPE_b = NLPE_b_ / BRAIN
        NSPE_b = NSPE_b_ / BRAIN
        slag1_b = NAPE_b / cons[25] + NOPE_b / cons[26] + NPPE_b / cons[27] + NLPE_b / cons[28] + NSPE_b / cons[29]
        slag2_b = A_b / cons[30] + O_b / cons[31] + P_b / cons[32] + L_b / cons[33] + S_b / cons[34]
        den_b = 1.0 + slag1_b + slag2_b
        vA_syn_b = BRAIN * cons[96] * cons[20] * NAPE_b / cons[25] / den_b
        vO_syn_b = BRAIN * cons[96] * cons[21] * NOPE_b / cons[26] / den_b
        vP_syn_b = BRAIN * cons[96] * cons[22] * NPPE_b / cons[27] / den_b
        vL_syn_b = BRAIN * cons[96] * cons[23] * NLPE_b / cons[28] / den_b
        vS_syn_b = BRAIN * cons[96] * cons[24] * NSPE_b / cons[29] / den_b
        vFAAH_syn_b = BRAIN * cons[36] * cons[43] * cons[56]
        vFAAH_degr_b = BRAIN * cons[56] * FAAH_b
        PF_p = PFM_p / cons[81] / cons[82]
        PF_b = PF_p * cons[92]
        vFAAH_inh_b = BRAIN * cons[57] * FAAH_b * PF_b
        FAAHinh_b = FAAHinh_b_ / BRAIN
        vFAAH_inh_degr_b = BRAIN * cons[56] * FAAHinh_b
        vA_UE_b = BRAIN * cons[43] * cons[58] * A_b
        vO_UE_b = BRAIN * cons[43] * cons[59] * O_b
        vP_UE_b = BRAIN * cons[43] * cons[60] * P_b
        vL_UE_b = BRAIN * cons[43] * cons[61] * L_b
        vS_UE_b = BRAIN * cons[43] * cons[62] * S_b
        FAAH_r = FAAH_r_ / ROB
        A_r = A_r_ / ROB
        O_r = O_r_ / ROB
        P_r = P_r_ / ROB
        L_r = L_r_ / ROB
        S_r = S_r_ / ROB
        FAAH_D_r = 1.0 + A_r / cons[51] + O_r / cons[52] + P_r / cons[53] + L_r / cons[54] + S_r / cons[55]
        vA_degr_r = ROB * FAAH_r * cons[35] * cons[37] * A_r / (cons[51] * FAAH_D_r)
        vO_degr_r = ROB * FAAH_r * cons[35] * cons[38] * O_r / (cons[52] * FAAH_D_r)
        vP_degr_r = ROB * FAAH_r * cons[35] * cons[39] * P_r / (cons[53] * FAAH_D_r)
        vL_degr_r = ROB * FAAH_r * cons[35] * cons[40] * L_r / (cons[54] * FAAH_D_r)
        vS_degr_r = ROB * FAAH_r * cons[35] * cons[41] * S_r / (cons[55] * FAAH_D_r)
        c_NAT_ROB = cons[105] * cons[13] + cons[101] * cons[14] + cons[106] * cons[15] + cons[102] * cons[16] + cons[107] * cons[17] + cons[103] * cons[18] + cons[104] * cons[19]
        vNAPE_syn_r = cons[1] * cons[2] * cons[7] * c_NAT_ROB
        vNOPE_syn_r = cons[1] * cons[3] * cons[8] * c_NAT_ROB
        vNPPE_syn_r = cons[1] * cons[4] * cons[9] * c_NAT_ROB
        vNLPE_syn_r = cons[1] * cons[5] * cons[10] * c_NAT_ROB
        vNSPE_syn_r = cons[1] * cons[6] * cons[11] * c_NAT_ROB
        NAPE_r = NAPE_r_ / ROB
        NOPE_r = NOPE_r_ / ROB
        NPPE_r = NPPE_r_ / ROB
        NLPE_r = NLPE_r_ / ROB
        NSPE_r = NSPE_r_ / ROB
        slag1_r = NAPE_r / cons[25] + NOPE_r / cons[26] + NPPE_r / cons[27] + NLPE_r / cons[28] + NSPE_r / cons[29]
        slag2_r = A_r / cons[30] + O_r / cons[31] + P_r / cons[32] + L_r / cons[33] + S_r / cons[34]
        den_r = 1.0 + slag1_r + slag2_r
        vA_syn_r = ROB * cons[97] * cons[20] * NAPE_r / cons[25] / den_r
        vO_syn_r = ROB * cons[97] * cons[21] * NOPE_r / cons[26] / den_r
        vP_syn_r = ROB * cons[97] * cons[22] * NPPE_r / cons[27] / den_r
        vL_syn_r = ROB * cons[97] * cons[23] * NLPE_r / cons[28] / den_r
        vS_syn_r = ROB * cons[97] * cons[24] * NSPE_r / cons[29] / den_r
        c_FAAH_ROB = cons[98] * cons[42] + cons[99] * cons[44] + cons[100] * cons[45] + cons[101] * cons[46] + cons[102] * cons[47] + cons[103] * cons[48] + cons[104] * cons[50]
        vFAAH_syn_r = cons[36] * c_FAAH_ROB * cons[56]
        vFAAH_degr_r = ROB * cons[56] * FAAH_r
        PF_r = PF_p * cons[94]
        vFAAH_inh_r = ROB * cons[57] * FAAH_r * PF_r
        FAAHinh_r = FAAHinh_r_ / ROB
        vFAAH_inh_degr_r = ROB * cons[56] * FAAHinh_r
        c_NAAA_ROB = cons[98] * cons[63] + cons[99] * cons[64] + cons[100] * cons[65] + cons[101] * cons[66] + cons[106] * cons[67] + cons[102] * cons[68] + cons[108] * cons[69] + cons[103] * cons[70]
        vA_UE_r = c_NAAA_ROB * cons[58] * A_r
        vO_UE_r = c_NAAA_ROB * cons[59] * O_r
        vP_UE_r = c_NAAA_ROB * cons[60] * P_r
        vL_UE_r = c_NAAA_ROB * cons[61] * L_r
        vS_UE_r = c_NAAA_ROB * cons[62] * S_r
        FAAH_m = FAAH_m_ / MEC
        A_m = A_m_ / MEC
        O_m = O_m_ / MEC
        P_m = P_m_ / MEC
        L_m = L_m_ / MEC
        S_m = S_m_ / MEC
        FAAH_D_m = 1.0 + A_m / cons[51] + O_m / cons[52] + P_m / cons[53] + L_m / cons[54] + S_m / cons[55]
        vA_degr_m = MEC * FAAH_m * cons[35] * cons[37] * A_m / (cons[51] * FAAH_D_m)
        vO_degr_m = MEC * FAAH_m * cons[35] * cons[38] * O_m / (cons[52] * FAAH_D_m)
        vP_degr_m = MEC * FAAH_m * cons[35] * cons[39] * P_m / (cons[53] * FAAH_D_m)
        vL_degr_m = MEC * FAAH_m * cons[35] * cons[40] * L_m / (cons[54] * FAAH_D_m)
        vS_degr_m = MEC * FAAH_m * cons[35] * cons[41] * S_m / (cons[55] * FAAH_D_m)
        vFAAH_syn_m = MEC * cons[36] * cons[49] * cons[56]
        vFAAH_degr_m = MEC * cons[56] * FAAH_m
        PF_m = PF_p * cons[93]
        vFAAH_inh_m = MEC * cons[57] * FAAH_m * PF_m
        FAAHinh_m = FAAHinh_m_ / MEC
        vFAAH_inh_degr_m = MEC * cons[56] * FAAHinh_m
        A_p = A_p_ / PLASMA
        vA_m_p = MEC * cons[110] * (A_m - A_p * cons[111]) / (A_m + A_p + cons[112])
        O_p = O_p_ / PLASMA
        vO_m_p = MEC * cons[113] * (O_m - O_p * cons[114])
        P_p = P_p_ / PLASMA
        vP_m_p = MEC * cons[115] * (P_m - P_p * cons[116])
        L_p = L_p_ / PLASMA
        vL_m_p = MEC * cons[117] * (L_m - L_p * cons[118])
        S_p = S_p_ / PLASMA
        vS_m_p = MEC * cons[119] * (S_m - S_p * cons[120])
        vA_b_m = MEC * cons[110] * (A_b - A_m) / (A_m + A_b + cons[112])
        vO_b_m = MEC * cons[113] * (O_b - O_m)
        vP_b_m = MEC * cons[115] * (P_b - P_m)
        vL_b_m = MEC * cons[117] * (L_b - L_m)
        vS_b_m = MEC * cons[119] * (S_b - S_m)
        vA_r_p = PLASMA * cons[121] * (A_r - A_p * cons[123]) / (A_r + A_p + cons[112])
        vO_r_p = PLASMA * cons[122] * (O_r - O_p * cons[124])
        vP_r_p = PLASMA * cons[122] * (P_r - P_p * cons[125])
        vL_r_p = PLASMA * cons[122] * (L_r - L_p * cons[126])
        vS_r_p = PLASMA * cons[122] * (S_r - S_p * cons[127])
        
        # force amount
        PFM_gut_ = PFM_gut
        PFM_p_ = PFM_p
        PFM_r_ = PFM_r

        d = Base.@locals
        return [d[id] for id in outputIds]
    end
end

### time events
function nameless_evt1_times_(cons, times = [0.0, 100.0])
    return [0.0]
end

### discrete events

### continous events

### event assignments
function nameless_evt1_assignment_(integrator)
    cons = integrator.p.constants
    t = integrator.t
    (GUT,PLASMA,ROB,BRAIN,MEC,) = integrator.p.static
    (PFM_gut,PFM_p,PFM_r,A_b_,O_b_,P_b_,L_b_,S_b_,NAPE_b_,NOPE_b_,NPPE_b_,NLPE_b_,NSPE_b_,FAAH_b_,FAAHinh_b_,A_r_,O_r_,P_r_,L_r_,S_r_,NAPE_r_,NOPE_r_,NPPE_r_,NLPE_r_,NSPE_r_,FAAH_r_,FAAHinh_r_,A_m_,O_m_,P_m_,L_m_,S_m_,FAAH_m_,FAAHinh_m_,A_p_,O_p_,P_p_,L_p_,S_p_,) = integrator.u

    # Heta rules
    F_PFM = cons[83] * cons[80] / (cons[84] + cons[80])
    dose_amount = F_PFM * cons[95] * cons[80] * F_PFM
    absorp = cons[85] * PFM_gut
    dist = cons[86] * PFM_p - cons[87] * PFM_r
    elim = cons[88] * PFM_p + (cons[89] * PFM_p / cons[82]) / (cons[90] + PFM_p / cons[82])
    FAAH_b = FAAH_b_ / BRAIN
    A_b = A_b_ / BRAIN
    O_b = O_b_ / BRAIN
    P_b = P_b_ / BRAIN
    L_b = L_b_ / BRAIN
    S_b = S_b_ / BRAIN
    FAAH_D_b = 1.0 + A_b / cons[51] + O_b / cons[52] + P_b / cons[53] + L_b / cons[54] + S_b / cons[55]
    vA_degr_b = BRAIN * FAAH_b * cons[35] * cons[37] * A_b / (cons[51] * FAAH_D_b)
    vO_degr_b = BRAIN * FAAH_b * cons[35] * cons[38] * O_b / (cons[52] * FAAH_D_b)
    vP_degr_b = BRAIN * FAAH_b * cons[35] * cons[39] * P_b / (cons[53] * FAAH_D_b)
    vL_degr_b = BRAIN * FAAH_b * cons[35] * cons[40] * L_b / (cons[54] * FAAH_D_b)
    vS_degr_b = BRAIN * FAAH_b * cons[35] * cons[41] * S_b / (cons[55] * FAAH_D_b)
    vNAPE_syn_b = BRAIN * cons[1] * cons[2] * cons[7] * cons[12]
    vNOPE_syn_b = BRAIN * cons[1] * cons[3] * cons[8] * cons[12]
    vNPPE_syn_b = BRAIN * cons[1] * cons[4] * cons[9] * cons[12]
    vNLPE_syn_b = BRAIN * cons[1] * cons[5] * cons[10] * cons[12]
    vNSPE_syn_b = BRAIN * cons[1] * cons[6] * cons[11] * cons[12]
    NAPE_b = NAPE_b_ / BRAIN
    NOPE_b = NOPE_b_ / BRAIN
    NPPE_b = NPPE_b_ / BRAIN
    NLPE_b = NLPE_b_ / BRAIN
    NSPE_b = NSPE_b_ / BRAIN
    slag1_b = NAPE_b / cons[25] + NOPE_b / cons[26] + NPPE_b / cons[27] + NLPE_b / cons[28] + NSPE_b / cons[29]
    slag2_b = A_b / cons[30] + O_b / cons[31] + P_b / cons[32] + L_b / cons[33] + S_b / cons[34]
    den_b = 1.0 + slag1_b + slag2_b
    vA_syn_b = BRAIN * cons[96] * cons[20] * NAPE_b / cons[25] / den_b
    vO_syn_b = BRAIN * cons[96] * cons[21] * NOPE_b / cons[26] / den_b
    vP_syn_b = BRAIN * cons[96] * cons[22] * NPPE_b / cons[27] / den_b
    vL_syn_b = BRAIN * cons[96] * cons[23] * NLPE_b / cons[28] / den_b
    vS_syn_b = BRAIN * cons[96] * cons[24] * NSPE_b / cons[29] / den_b
    vFAAH_syn_b = BRAIN * cons[36] * cons[43] * cons[56]
    vFAAH_degr_b = BRAIN * cons[56] * FAAH_b
    PF_p = PFM_p / cons[81] / cons[82]
    PF_b = PF_p * cons[92]
    vFAAH_inh_b = BRAIN * cons[57] * FAAH_b * PF_b
    FAAHinh_b = FAAHinh_b_ / BRAIN
    vFAAH_inh_degr_b = BRAIN * cons[56] * FAAHinh_b
    vA_UE_b = BRAIN * cons[43] * cons[58] * A_b
    vO_UE_b = BRAIN * cons[43] * cons[59] * O_b
    vP_UE_b = BRAIN * cons[43] * cons[60] * P_b
    vL_UE_b = BRAIN * cons[43] * cons[61] * L_b
    vS_UE_b = BRAIN * cons[43] * cons[62] * S_b
    FAAH_r = FAAH_r_ / ROB
    A_r = A_r_ / ROB
    O_r = O_r_ / ROB
    P_r = P_r_ / ROB
    L_r = L_r_ / ROB
    S_r = S_r_ / ROB
    FAAH_D_r = 1.0 + A_r / cons[51] + O_r / cons[52] + P_r / cons[53] + L_r / cons[54] + S_r / cons[55]
    vA_degr_r = ROB * FAAH_r * cons[35] * cons[37] * A_r / (cons[51] * FAAH_D_r)
    vO_degr_r = ROB * FAAH_r * cons[35] * cons[38] * O_r / (cons[52] * FAAH_D_r)
    vP_degr_r = ROB * FAAH_r * cons[35] * cons[39] * P_r / (cons[53] * FAAH_D_r)
    vL_degr_r = ROB * FAAH_r * cons[35] * cons[40] * L_r / (cons[54] * FAAH_D_r)
    vS_degr_r = ROB * FAAH_r * cons[35] * cons[41] * S_r / (cons[55] * FAAH_D_r)
    c_NAT_ROB = cons[105] * cons[13] + cons[101] * cons[14] + cons[106] * cons[15] + cons[102] * cons[16] + cons[107] * cons[17] + cons[103] * cons[18] + cons[104] * cons[19]
    vNAPE_syn_r = cons[1] * cons[2] * cons[7] * c_NAT_ROB
    vNOPE_syn_r = cons[1] * cons[3] * cons[8] * c_NAT_ROB
    vNPPE_syn_r = cons[1] * cons[4] * cons[9] * c_NAT_ROB
    vNLPE_syn_r = cons[1] * cons[5] * cons[10] * c_NAT_ROB
    vNSPE_syn_r = cons[1] * cons[6] * cons[11] * c_NAT_ROB
    NAPE_r = NAPE_r_ / ROB
    NOPE_r = NOPE_r_ / ROB
    NPPE_r = NPPE_r_ / ROB
    NLPE_r = NLPE_r_ / ROB
    NSPE_r = NSPE_r_ / ROB
    slag1_r = NAPE_r / cons[25] + NOPE_r / cons[26] + NPPE_r / cons[27] + NLPE_r / cons[28] + NSPE_r / cons[29]
    slag2_r = A_r / cons[30] + O_r / cons[31] + P_r / cons[32] + L_r / cons[33] + S_r / cons[34]
    den_r = 1.0 + slag1_r + slag2_r
    vA_syn_r = ROB * cons[97] * cons[20] * NAPE_r / cons[25] / den_r
    vO_syn_r = ROB * cons[97] * cons[21] * NOPE_r / cons[26] / den_r
    vP_syn_r = ROB * cons[97] * cons[22] * NPPE_r / cons[27] / den_r
    vL_syn_r = ROB * cons[97] * cons[23] * NLPE_r / cons[28] / den_r
    vS_syn_r = ROB * cons[97] * cons[24] * NSPE_r / cons[29] / den_r
    c_FAAH_ROB = cons[98] * cons[42] + cons[99] * cons[44] + cons[100] * cons[45] + cons[101] * cons[46] + cons[102] * cons[47] + cons[103] * cons[48] + cons[104] * cons[50]
    vFAAH_syn_r = cons[36] * c_FAAH_ROB * cons[56]
    vFAAH_degr_r = ROB * cons[56] * FAAH_r
    PF_r = PF_p * cons[94]
    vFAAH_inh_r = ROB * cons[57] * FAAH_r * PF_r
    FAAHinh_r = FAAHinh_r_ / ROB
    vFAAH_inh_degr_r = ROB * cons[56] * FAAHinh_r
    c_NAAA_ROB = cons[98] * cons[63] + cons[99] * cons[64] + cons[100] * cons[65] + cons[101] * cons[66] + cons[106] * cons[67] + cons[102] * cons[68] + cons[108] * cons[69] + cons[103] * cons[70]
    vA_UE_r = c_NAAA_ROB * cons[58] * A_r
    vO_UE_r = c_NAAA_ROB * cons[59] * O_r
    vP_UE_r = c_NAAA_ROB * cons[60] * P_r
    vL_UE_r = c_NAAA_ROB * cons[61] * L_r
    vS_UE_r = c_NAAA_ROB * cons[62] * S_r
    FAAH_m = FAAH_m_ / MEC
    A_m = A_m_ / MEC
    O_m = O_m_ / MEC
    P_m = P_m_ / MEC
    L_m = L_m_ / MEC
    S_m = S_m_ / MEC
    FAAH_D_m = 1.0 + A_m / cons[51] + O_m / cons[52] + P_m / cons[53] + L_m / cons[54] + S_m / cons[55]
    vA_degr_m = MEC * FAAH_m * cons[35] * cons[37] * A_m / (cons[51] * FAAH_D_m)
    vO_degr_m = MEC * FAAH_m * cons[35] * cons[38] * O_m / (cons[52] * FAAH_D_m)
    vP_degr_m = MEC * FAAH_m * cons[35] * cons[39] * P_m / (cons[53] * FAAH_D_m)
    vL_degr_m = MEC * FAAH_m * cons[35] * cons[40] * L_m / (cons[54] * FAAH_D_m)
    vS_degr_m = MEC * FAAH_m * cons[35] * cons[41] * S_m / (cons[55] * FAAH_D_m)
    vFAAH_syn_m = MEC * cons[36] * cons[49] * cons[56]
    vFAAH_degr_m = MEC * cons[56] * FAAH_m
    PF_m = PF_p * cons[93]
    vFAAH_inh_m = MEC * cons[57] * FAAH_m * PF_m
    FAAHinh_m = FAAHinh_m_ / MEC
    vFAAH_inh_degr_m = MEC * cons[56] * FAAHinh_m
    A_p = A_p_ / PLASMA
    vA_m_p = MEC * cons[110] * (A_m - A_p * cons[111]) / (A_m + A_p + cons[112])
    O_p = O_p_ / PLASMA
    vO_m_p = MEC * cons[113] * (O_m - O_p * cons[114])
    P_p = P_p_ / PLASMA
    vP_m_p = MEC * cons[115] * (P_m - P_p * cons[116])
    L_p = L_p_ / PLASMA
    vL_m_p = MEC * cons[117] * (L_m - L_p * cons[118])
    S_p = S_p_ / PLASMA
    vS_m_p = MEC * cons[119] * (S_m - S_p * cons[120])
    vA_b_m = MEC * cons[110] * (A_b - A_m) / (A_m + A_b + cons[112])
    vO_b_m = MEC * cons[113] * (O_b - O_m)
    vP_b_m = MEC * cons[115] * (P_b - P_m)
    vL_b_m = MEC * cons[117] * (L_b - L_m)
    vS_b_m = MEC * cons[119] * (S_b - S_m)
    vA_r_p = PLASMA * cons[121] * (A_r - A_p * cons[123]) / (A_r + A_p + cons[112])
    vO_r_p = PLASMA * cons[122] * (O_r - O_p * cons[124])
    vP_r_p = PLASMA * cons[122] * (P_r - P_p * cons[125])
    vL_r_p = PLASMA * cons[122] * (L_r - L_p * cons[126])
    vS_r_p = PLASMA * cons[122] * (S_r - S_p * cons[127])
    
    # recalculated values
    (PFM_gut,) = (PFM_gut + dose_amount,)
    
    # save results
    integrator.u[[1,]] = [
        PFM_gut,
    ]
    integrator.p.static[[]] = [
    ]
end


### model

nameless_model_ = Model(
  nameless_start_,
  nameless_ode_,
  [
      TimeEvent(nameless_evt1_times_, nameless_evt1_assignment_, :evt1, true),
  ],
  nameless_make_saving_,
  nameless_constants_,
  nameless_output_;
  title = "nameless",
  free_constants = NamedTuple{(
  )}([
  ]),
  builderVersion = "0.6.1"
)

### OUTPUT

models = (
    nameless = nameless_model_,
)
tasks = ()

return (models, tasks,)

end
